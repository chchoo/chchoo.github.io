{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/---avatar.gif","path":"images/---avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechatpay.png","path":"images/wechatpay.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/rating.js","path":"js/third-party/rating.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_data/styles.styl","hash":"15cfba7899e6425c4b5022c65f712ad738cee7d2","modified":1637281877975},{"_id":"source/_posts/vue基础入门.md","hash":"560e92d5fa8d36d6c276b881dfd0e3836c71379b","modified":1637149283000},{"_id":"source/_posts/vue组件使用.md","hash":"0923415e3504b4334d80ce7126560865cd3c56b8","modified":1637239112622},{"_id":"source/_posts/vue生命周期.md","hash":"3a10b1d9882f661918c6c398f9afe3c44e6a2807","modified":1637240500473},{"_id":"source/categories/index.md","hash":"775ef7ac922e8d7dcf932e78422152298e8959dd","modified":1637149283000},{"_id":"source/_posts/vue基础属性.md","hash":"eca55bfa66355553626f9733b9247c02b09b7966","modified":1637149283000},{"_id":"source/about/index.md","hash":"a7e56f39d9499497b9dbf1bdee8a106f09566260","modified":1637149283000},{"_id":"source/tags/index.md","hash":"9515be126bbd62c7bf1e9a974e8a78454b4faa2c","modified":1637149283000},{"_id":"source/_posts/vue基础入门/image-20211114091321486.png","hash":"1bc883b149376205128b1d85f8490baf0dbf6f0b","modified":1637149283000},{"_id":"source/_posts/vue基础入门/image-20211114091337628.png","hash":"2ffe2f52c26a69304988e55db34edd5cfdcfb725","modified":1637149283000},{"_id":"source/_posts/vue基础入门/image-20211114091337628-16368533729791.png","hash":"2ffe2f52c26a69304988e55db34edd5cfdcfb725","modified":1637149283000},{"_id":"source/_posts/vue基础入门/image-20211114091321486-16368533833712.png","hash":"1bc883b149376205128b1d85f8490baf0dbf6f0b","modified":1637149283000},{"_id":"source/_posts/vue基础入门/image-20211114143420078.png","hash":"1bc883b149376205128b1d85f8490baf0dbf6f0b","modified":1637149283000},{"_id":"source/_posts/vue基础入门/image-20211114091405800.png","hash":"e34d75acf12a257851e8304c0f0a342a75ac64b7","modified":1637149283000},{"_id":"source/_posts/vue基础入门/image-20211114143428305.png","hash":"2ffe2f52c26a69304988e55db34edd5cfdcfb725","modified":1637149283000},{"_id":"source/_posts/vue基础入门/image-20211114143435985.png","hash":"e34d75acf12a257851e8304c0f0a342a75ac64b7","modified":1637149283000},{"_id":"source/_posts/vue基础属性/image-20211115152931976.png","hash":"2bfbeab9fd6aaf0136b9cc80f0bf2e248378c756","modified":1637149283000},{"_id":"source/_posts/vue基础属性/image-20211115153220820.png","hash":"9afa99617521880f1e27e8f16d75a2489be956da","modified":1637149283000},{"_id":"source/_posts/vue基础属性/image-20211115153036413.png","hash":"9411a731fd1cd206392b98167b4e4557ad5b2b4d","modified":1637149283000},{"_id":"source/_posts/vue基础入门/image-20211114091424285.png","hash":"f59673b2d0f6871c025e28902f48b49ad16ec114","modified":1637149283000},{"_id":"themes/next/.gitattributes","hash":"ec43734985e1cafd53d88ded3020103f7416123c","modified":1637149283000},{"_id":"themes/next/.gitignore","hash":"417520c4dbbeab9c7e3ab10d944da0886366a0ee","modified":1637149283000},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1637149283000},{"_id":"themes/next/_vendors.yml","hash":"a9babdef991b0e7645f420c5a6b8e1a61b5d70d8","modified":1637149283000},{"_id":"themes/next/.eslintrc.json","hash":"9c0762486f24a8c5e60f8b6c875e4c4728942649","modified":1637149283000},{"_id":"themes/next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1637149283000},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1637149283000},{"_id":"themes/next/README.md","hash":"fab15a85d9d8d90ecd8879525b9b74fb1c197978","modified":1637149283000},{"_id":"themes/next/.githooks/install.js","hash":"4d77dbddf2eac1f3fc78f151d12ed22208ed655b","modified":1637149283000},{"_id":"themes/next/package.json","hash":"f294566c22fec5f9404e560326a2ba18dca8591e","modified":1637149283000},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1637149283000},{"_id":"themes/next/renovate.json","hash":"cb29cc16e61b0b8a6dac34657d76822ae29ad5aa","modified":1637149283000},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"21cbff565a0445d3a880fff1ee417e309740a9ab","modified":1637149283000},{"_id":"themes/next/.githooks/pre-commit","hash":"f473eac1aaaa96c947d67988bbed140bbab1a821","modified":1637149283000},{"_id":"themes/next/_config.yml","hash":"b9b28ddc4d8a23489f2d6fc0f4f814f74bade7f9","modified":1637220826922},{"_id":"themes/next/.github/config.yml","hash":"7984e665e9de481a0e0e51fca5668337713f810b","modified":1637149283000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"330656d93b6c03df9fb1f2f0e3534c971969473b","modified":1637149283000},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1637149283000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"3e9fbb78e3dee0ca1dc886d0c28b0148ba0ca499","modified":1637149283000},{"_id":"themes/next/.github/label-commenter-config.yml","hash":"1097fc47beeacfc1edb0248c27b17bf64bde3565","modified":1637149283000},{"_id":"themes/next/.github/release-drafter.yml","hash":"423275ec021104b263cd88776936a8c8d6872b66","modified":1637149283000},{"_id":"themes/next/.github/labeler.yml","hash":"5c4bc2bd561e6d9b33ee118cc12218c5de46f72d","modified":1637149283000},{"_id":"themes/next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1637149283000},{"_id":"themes/next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1637149283000},{"_id":"themes/next/languages/ar.yml","hash":"bca66db21c015dbd32970d8708b898518a773e1e","modified":1637149283000},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1637149283000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1637149283000},{"_id":"themes/next/languages/de.yml","hash":"4be7b8b76c81bf1853eb36d2e874b17546a0e792","modified":1637149283000},{"_id":"themes/next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1637149283000},{"_id":"themes/next/languages/en.yml","hash":"814d81c27fed736055ee300e0a6505b26ff4313c","modified":1637149283000},{"_id":"themes/next/languages/es.yml","hash":"651e3b33d86a7cdb9fd7895ca28279f8b1a24faa","modified":1637149283000},{"_id":"themes/next/languages/fr.yml","hash":"b15dc05afdc94de02e5d3fee4f8d3dc5594dd37e","modified":1637149283000},{"_id":"themes/next/languages/fa.yml","hash":"6456d40dd42f44101d9d6e7054e9884e9163f948","modified":1637149283000},{"_id":"themes/next/languages/id.yml","hash":"14e794db4eca36b257994d81eb513e61d1edcbd6","modified":1637149283000},{"_id":"themes/next/languages/it.yml","hash":"c1eeab4992c76bfd436bb205ce58b1cfeef55ee6","modified":1637149283000},{"_id":"themes/next/languages/nl.yml","hash":"ecb8e39c6225f3c068a5fdd569ee7dafd5c41a1f","modified":1637149283000},{"_id":"themes/next/languages/ja.yml","hash":"d48c4157e0e02e847aac7b513580d3364c81948c","modified":1637149283000},{"_id":"themes/next/languages/ko.yml","hash":"6387357ac2dd498e8b8d630d27050a59180d7e8f","modified":1637149283000},{"_id":"themes/next/languages/pt-BR.yml","hash":"a1f27b3a592fc58f17d247f5563ff4a90a3da5f2","modified":1637149283000},{"_id":"themes/next/languages/pt.yml","hash":"63a3e1e728ba5e6e22150de7331bb8a654f34960","modified":1637149283000},{"_id":"themes/next/languages/ru.yml","hash":"e9af1afe529ca747a04b801401d394b2ad696fde","modified":1637149283000},{"_id":"themes/next/languages/si.yml","hash":"615d18d044f44df476d6bfbf73f7b0edc2632168","modified":1637149283000},{"_id":"themes/next/languages/uk.yml","hash":"7dd24580c0865c5a7bc4d391855045366a598936","modified":1637149283000},{"_id":"themes/next/languages/tr.yml","hash":"0bebba73d6f06c7dad61f80c0d7ad5f6f1791a01","modified":1637149283000},{"_id":"themes/next/languages/vi.yml","hash":"c669c34da544a563ceae3e196addc9df6a78e024","modified":1637149283000},{"_id":"themes/next/languages/zh-CN.yml","hash":"5a3ab21210304efef736e96bad254f789f42c567","modified":1637149283000},{"_id":"themes/next/languages/zh-TW.yml","hash":"92256b90028de9a1e79c6bc0e5885b93e7fb4b17","modified":1637149283000},{"_id":"themes/next/layout/_layout.njk","hash":"20e4160cd0deb4fa272cc3aed0f43520b3cf4a9c","modified":1637149283000},{"_id":"themes/next/languages/zh-HK.yml","hash":"f195bb0502ffe66e850077a1af1033455ea65f93","modified":1637149283000},{"_id":"themes/next/layout/index.njk","hash":"37ec3d1bcd20b8ac1d18e0d68f990450890b46cd","modified":1637149283000},{"_id":"themes/next/layout/post.njk","hash":"6abeb85fb3e4c382ed4bb6049b12a807e6226e67","modified":1637149283000},{"_id":"themes/next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1637149283000},{"_id":"themes/next/layout/category.njk","hash":"0a590e87af50e57b15fc37695c9a3bf4a97c3d92","modified":1637149283000},{"_id":"themes/next/test/index.js","hash":"6bf0289846538be3e9a63809af98f00e1fbdd90b","modified":1637149283000},{"_id":"themes/next/layout/page.njk","hash":"9cd3eca2c468bb46c7c5bf391bea4b025af178f6","modified":1637149283000},{"_id":"themes/next/layout/tag.njk","hash":"6cd707f846bfd6becbcfb060c26958bb4015c31f","modified":1637149283000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":1637149283000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/config.yml","hash":"c40ae7903b6cc99f94c9d45ac7ba8c2850bb1309","modified":1637149283000},{"_id":"themes/next/.github/workflows/label-commenter.yml","hash":"44405477660289d4ed9beba1d054b15bb67bba06","modified":1637149283000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"fc4dce84ed9a5d21d3a8833ff6d776c46f876115","modified":1637149283000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"4ecac91716eac59d7c2bc53cf6e95612d44da97b","modified":1637149283000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"8cc5b5c116f6a052865a324512362f145d699202","modified":1637149283000},{"_id":"themes/next/.github/workflows/labeler.yml","hash":"8b73c439dc796be141d521a4546bcfb7a5485534","modified":1637149283000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":1637149283000},{"_id":"themes/next/.github/workflows/linter.yml","hash":"276a91c7179926f410c784c99fa635dc0a016c2d","modified":1637149283000},{"_id":"themes/next/.github/workflows/release-drafter.yml","hash":"4f3af81009cb922be91f718a67425377515ea69d","modified":1637149283000},{"_id":"themes/next/.github/workflows/stale.yml","hash":"0feb3e1afd1b2dca9dbc7811ce4cf5520e2d186c","modified":1637149283000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"02bafc6ee86263790603861e356596f0c916e392","modified":1637149283000},{"_id":"themes/next/.github/workflows/lock.yml","hash":"e48d1ced9a673d3f0911a700d3e68c0f4ca79263","modified":1637149283000},{"_id":"themes/next/.github/workflows/tester.yml","hash":"22aaaa3eba1a7ebcf0f78417fd9a7113ee7b6c6c","modified":1637149283000},{"_id":"themes/next/docs/ru/README.md","hash":"87edab5a3eb7577a409c01df3f1631de40f8956f","modified":1637149283000},{"_id":"themes/next/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":1637149283000},{"_id":"themes/next/layout/_partials/comments.njk","hash":"c12f8a7497596441503f2541d2f746f2ee7dd594","modified":1637149283000},{"_id":"themes/next/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":1637149283000},{"_id":"themes/next/layout/_macro/post.njk","hash":"b106599106285ecd4c0c1e0ed11c46a36b5a69d5","modified":1637149283000},{"_id":"themes/next/layout/_partials/footer.njk","hash":"19713f472972caac33ae5fbcfe9105da61257de4","modified":1637149283000},{"_id":"themes/next/layout/_partials/pagination.njk","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1637149283000},{"_id":"themes/next/layout/_macro/sidebar.njk","hash":"eb786e8b35e354287cda345c524cd35ec955f692","modified":1637149283000},{"_id":"themes/next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1637149283000},{"_id":"themes/next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1637149283000},{"_id":"themes/next/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":1637149283000},{"_id":"themes/next/layout/_third-party/index.njk","hash":"d41eeb262978e34de4679d8971a9e7ac5d90ecbc","modified":1637149283000},{"_id":"themes/next/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":1637149283000},{"_id":"themes/next/scripts/filters/locals.js","hash":"0cd7da6755459d60779f0a7ccf311e26e184d55d","modified":1637149283000},{"_id":"themes/next/layout/_third-party/rating.njk","hash":"1bcdbc7fde26d6d9ef4e7fa43ffcff5a9506b20e","modified":1637149283000},{"_id":"themes/next/layout/_partials/widgets.njk","hash":"852a750524decf1efa587cd52b09e387ed8315de","modified":1637149283000},{"_id":"themes/next/scripts/events/index.js","hash":"1ce12eda88fa5df7e76ec7b78b8463fc6618410c","modified":1637149283000},{"_id":"themes/next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1637149283000},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1637149283000},{"_id":"themes/next/scripts/filters/minify.js","hash":"0af64049db8188d5f8cc226b353e0d7909819feb","modified":1637149283000},{"_id":"themes/next/scripts/filters/post.js","hash":"ab8bb12e4d55640b1ac4252514468ce37ebcb0b0","modified":1637149283000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"b9785bc737470e9b8e910e7da9e8c45c2ead58fa","modified":1637149283000},{"_id":"themes/next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1637149283000},{"_id":"themes/next/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":1637149283000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"a11b71ba0c5012e2cdcab31c15439156b215563e","modified":1637149283000},{"_id":"themes/next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1637149283000},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"9a07f2d979fc8fe0c5e07d48304187b9b03ea7ff","modified":1637149283000},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1637149283000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"79102d9e9bccff6224e77a77c4d2d363094ae3df","modified":1637149283000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1637149283000},{"_id":"themes/next/scripts/tags/index.js","hash":"17f9451ce1f10f78437f52218757d38d4e1591b0","modified":1637149283000},{"_id":"themes/next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1637149283000},{"_id":"themes/next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1637149283000},{"_id":"themes/next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1637149283000},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":1637149283000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1637149283000},{"_id":"themes/next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1637149283000},{"_id":"themes/next/source/css/_colors.styl","hash":"3c6798c10cc220d83481cb3f3782e78558cee789","modified":1637149283000},{"_id":"themes/next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1637149283000},{"_id":"themes/next/source/css/_mixins.styl","hash":"acef5acc728f24cb657be8d7010d836b4d556b0e","modified":1637149283000},{"_id":"themes/next/source/images/---avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1637149283000},{"_id":"themes/next/source/css/noscript.styl","hash":"76bba5d7916e9930e68215a0fce3a7d81c44510f","modified":1637149283000},{"_id":"themes/next/source/css/main.styl","hash":"78ce791cc4ac95386cf6839ca72f5f7b51f86ee9","modified":1637149283000},{"_id":"themes/next/source/images/alipay.png","hash":"aded05f9c164ad0ce65fef57689f714831c126f4","modified":1637149283000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1637149283000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1637149283000},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1637149283000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1637149283000},{"_id":"themes/next/source/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1637149283000},{"_id":"themes/next/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1637149283000},{"_id":"themes/next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1637149283000},{"_id":"themes/next/source/images/wechatpay.png","hash":"0f6e7a989e9dd2a343fb5ca5c2b27218e6819238","modified":1637149283000},{"_id":"themes/next/source/js/next-boot.js","hash":"48497e2156a10155dc42311633a110c9685692c9","modified":1637149283000},{"_id":"themes/next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1637149283000},{"_id":"themes/next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1637149283000},{"_id":"themes/next/source/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":1637149283000},{"_id":"themes/next/source/js/schedule.js","hash":"2b43e2d576a308289880befc27580dbb2aa34439","modified":1637149283000},{"_id":"themes/next/test/helpers/index.js","hash":"63ba28afed697f7b3574436b1133b8ecc9c0c357","modified":1637149283000},{"_id":"themes/next/test/helpers/font.js","hash":"342ef3c6fd2dcca2a8802a516ed6d7f389fd2ca2","modified":1637149283000},{"_id":"themes/next/source/js/pjax.js","hash":"919f5281c4a04d11cfd94573ecf57b3dbabd3cc8","modified":1637149283000},{"_id":"themes/next/source/js/utils.js","hash":"e447160d342b1f93df5214b6a733441039ced439","modified":1637149283000},{"_id":"themes/next/test/tags/center-quote.js","hash":"7667342fd1a1417eaf6a254012b84ae40e8d13dd","modified":1637149283000},{"_id":"themes/next/test/helpers/next-url.js","hash":"a91d880cb75e0a8e65a7be4c7362b2c8ebfb7c4f","modified":1637149283000},{"_id":"themes/next/test/tags/caniuse.js","hash":"aa5e728445caeaf7c2ccd0f3fcb2cad0c93ca6d1","modified":1637149283000},{"_id":"themes/next/test/tags/index.js","hash":"e8779e54f0979b221858f8bb74dd081bb503b910","modified":1637149283000},{"_id":"themes/next/test/tags/button.js","hash":"48f2aa4c513e9e24bd6a811410520b74cd7ea88b","modified":1637149283000},{"_id":"themes/next/test/tags/label.js","hash":"4ebf3698c258ca978b997acbdd0dece44069c09d","modified":1637149283000},{"_id":"themes/next/test/tags/group-pictures.js","hash":"f41640e5d0f552c0b0c4ac8876a2edb0fcf54e56","modified":1637149283000},{"_id":"themes/next/test/tags/mermaid.js","hash":"ab77be5f3c6d9a57c7b9dda6decf1906a736fef9","modified":1637149283000},{"_id":"themes/next/test/tags/link-grid.js","hash":"43d298fafb7c45a874b766d443843bd26346e689","modified":1637149283000},{"_id":"themes/next/test/tags/note.js","hash":"3dcfcd65bf9f326972ea7571fdb1444200f5d07e","modified":1637149283000},{"_id":"themes/next/test/tags/video.js","hash":"b796fc4dceb20a30e730c322bb5474c0162464cc","modified":1637149283000},{"_id":"themes/next/test/tags/pdf.js","hash":"fd6ea5123560a90f7e7c1eface23dbe1455db25f","modified":1637149283000},{"_id":"themes/next/layout/_partials/head/head-unique.njk","hash":"9167e429a459686c9fc140790124a46d677e6b15","modified":1637149283000},{"_id":"themes/next/test/tags/tabs.js","hash":"d63722919f9da2e44d6b952801e10a2915ea9c12","modified":1637149283000},{"_id":"themes/next/layout/_partials/header/index.njk","hash":"53895b3af95667edc5bf5d7356f8a2b4fe091447","modified":1637149283000},{"_id":"themes/next/test/validate/index.js","hash":"5a95ccc8598667535bd022e988055c0e019f3670","modified":1637149283000},{"_id":"themes/next/layout/_partials/head/head.njk","hash":"d3c094aaef1431fbc9df333529a7b1789ccd134c","modified":1637149283000},{"_id":"themes/next/layout/_partials/header/brand.njk","hash":"ffb6c69a9c90793cbe9bf0544b55f7a41c016d8f","modified":1637149283000},{"_id":"themes/next/layout/_partials/header/menu.njk","hash":"c9390824b57f23b7c8a5c23a9834514123673766","modified":1637149283000},{"_id":"themes/next/layout/_partials/post/post-footer.njk","hash":"bde2c7356d9362972bde41cc206d5816f8ed714d","modified":1637149283000},{"_id":"themes/next/layout/_partials/header/menu-item.njk","hash":"b46f412c0b4f775fd329d50357f722f5d7c1a3ba","modified":1637149283000},{"_id":"themes/next/layout/_partials/header/sub-menu.njk","hash":"75a158a5b54a3a76ee6590f5e0e2dd4a9f0be869","modified":1637149283000},{"_id":"themes/next/layout/_partials/post/post-followme.njk","hash":"154df0bb323c332d8c25343f258ee865e5553423","modified":1637149283000},{"_id":"themes/next/layout/_partials/post/post-copyright.njk","hash":"133942922e34abae9e4de7ea5591d77c0caa4b37","modified":1637149283000},{"_id":"themes/next/layout/_partials/post/post-reward.njk","hash":"002b51d0cae3f2e2e008bdc58be90c728282de5b","modified":1637149283000},{"_id":"themes/next/layout/_partials/post/post-meta.njk","hash":"471dcbe22d0dbe043dcf25a1a1c17ca76aa9a548","modified":1637149283000},{"_id":"themes/next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1637149283000},{"_id":"themes/next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1637149283000},{"_id":"themes/next/layout/_partials/page/breadcrumb.njk","hash":"edb3bb6d644b7407673c5ef3a426a244e98fcf89","modified":1637149283000},{"_id":"themes/next/layout/_partials/page/schedule.njk","hash":"ca2ccf3cf1874c45712f192ad45dea96fbd9920d","modified":1637149283000},{"_id":"themes/next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1637149283000},{"_id":"themes/next/layout/_partials/post/post-related.njk","hash":"7384e6390067ef2a84e7310d6adb3f6104ed62e2","modified":1637149283000},{"_id":"themes/next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1637149283000},{"_id":"themes/next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1637149283000},{"_id":"themes/next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1637149283000},{"_id":"themes/next/layout/_third-party/chat/gitter.njk","hash":"f8cc14b7aa949999a1faaeb7855e2f20b59a386d","modified":1637149283000},{"_id":"themes/next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":1637149283000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1637149283000},{"_id":"themes/next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":1637149283000},{"_id":"themes/next/layout/_third-party/analytics/cloudflare.njk","hash":"c978e9efd472c4825f93b83524b11f1c4f7efaab","modified":1637149283000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1637149283000},{"_id":"themes/next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1637149283000},{"_id":"themes/next/layout/_third-party/analytics/index.njk","hash":"2d36a481a70d5f450f1f166dc556ac1218b18537","modified":1637149283000},{"_id":"themes/next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1637149283000},{"_id":"themes/next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1637149283000},{"_id":"themes/next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1637149283000},{"_id":"themes/next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1637149283000},{"_id":"themes/next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1637149283000},{"_id":"themes/next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1637149283000},{"_id":"themes/next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1637149283000},{"_id":"themes/next/layout/_third-party/math/katex.njk","hash":"d82c24136bbd3443b85f07f5579845833b594684","modified":1637149283000},{"_id":"themes/next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":1637149283000},{"_id":"themes/next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1637149283000},{"_id":"themes/next/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":1637149283000},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1637149283000},{"_id":"themes/next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1637149283000},{"_id":"themes/next/layout/_partials/sidebar/site-overview.njk","hash":"5c01e380ba843f8016d8fa4593432430f5bd3584","modified":1637149283000},{"_id":"themes/next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1637149283000},{"_id":"themes/next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1637149283000},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1637149283000},{"_id":"themes/next/scripts/events/lib/config.js","hash":"b0ced2583fdd505da3ef27a9db9c55cc7b936732","modified":1637149283000},{"_id":"themes/next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":1637149283000},{"_id":"themes/next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1637149283000},{"_id":"themes/next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1637149283000},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":1637149283000},{"_id":"themes/next/scripts/events/lib/utils.js","hash":"b281be775b693f9bf32766c8f6ef703c72ac9b00","modified":1637149283000},{"_id":"themes/next/scripts/events/lib/vendors.js","hash":"08dac57e15c9f06c7cf54884b045f2362595f9d2","modified":1637149283000},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"aa05e6b3d613a756178b8ba06832ad27499d4c14","modified":1637149283000},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1637149283000},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":1637149283000},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1637149283000},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":1637149283000},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"135b87d151055eefdbc711d9e704b112b3214a84","modified":1637149283000},{"_id":"themes/next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1637149283000},{"_id":"themes/next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1637149283000},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":1637149283000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":1637149283000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1637149283000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e1fbf169b9b6a194b518240cbd06ec3c48b83d61","modified":1637149283000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"c6b3c031d23b2a093e025c75b7cab6bc0379c6ea","modified":1637149283000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c65536a128b9bc9dbe2fbb1b235a3cded2891002","modified":1637149283000},{"_id":"themes/next/source/js/schemes/muse.js","hash":"9a836d2bcc3defe4bd1ee51f5f4eb7006ebdd41b","modified":1637149283000},{"_id":"themes/next/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1637149283000},{"_id":"themes/next/source/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1637149283000},{"_id":"themes/next/source/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"fd49b521d67eaccc629f77b4e095cb7310327565","modified":1637149283000},{"_id":"themes/next/source/js/third-party/quicklink.js","hash":"6f58cd7aa8f6f1ab92d5a96551add293f4e55312","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/index.styl","hash":"fe1868f47681e00a33a96199302be85377282f63","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"bab653bcf226311381e8411a0492202f1bf1fce9","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"2e58cb90a77d3dd16e02b8949808b4b16453828c","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"572a41499391677d84b16d8dbd6a996a3d5ce041","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"b5c7782368889fa9fd93807d28ff2daf270e3703","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"357b899ac0f0dfbbbebf1ea972030c7cefa463ce","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"64775c729512b30b144ab5ae9dc4a4dfd4e13f35","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"4817e77577896ab5c0da434549917ee703a3f4cf","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"06080fd963c904d96c00eff098a284e337953013","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"5604ac1e161099a4d3e5657d53507268866dc717","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"82a29572dd90451f75358a2ee2522b87304a0bb8","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"b332868d76d9f1651efd65abfc0d3c9d699b1a45","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"8a70d51d8f7cd113e5fbc9f0e70c46a072f282c8","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"944364893bd7160d954c10ba931af641c91515a4","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"b741ab96e73370711c63a6581159f2ea8b5bfa1b","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"6eee86c8f0175d6c09e434053516cd8556f78d44","modified":1637149283000},{"_id":"themes/next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1637149283000},{"_id":"themes/next/source/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1637149283000},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d9141e6e14a56b5952488101e9a8388c2170e270","modified":1637149283000},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1637149283000},{"_id":"themes/next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1637149283000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":1637149283000},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":1637149283000},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1637149283000},{"_id":"themes/next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1637149283000},{"_id":"themes/next/source/js/third-party/comments/changyan.js","hash":"8c8ebec444c727b704ea41ad88b0b96ed2e4b8d4","modified":1637149283000},{"_id":"themes/next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1637149283000},{"_id":"themes/next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1637149283000},{"_id":"themes/next/source/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1637149283000},{"_id":"themes/next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1637149283000},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1637149283000},{"_id":"themes/next/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1637149283000},{"_id":"themes/next/source/js/third-party/search/local-search.js","hash":"45c485f82258d246f37deb66884bd2643323ef3a","modified":1637149283000},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","hash":"0960f16107ed61452fb0dffc6ed22dc143de34ef","modified":1637149283000},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","hash":"3dc4628efa6debd6490fc0ebddff2424a7b319d8","modified":1637149283000},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","hash":"5a928990856b8e456f0663cf3b6b406733672e39","modified":1637149283000},{"_id":"themes/next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1637149283000},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","hash":"ac401e3736d56a3c9cb85ab885744cce0b813c55","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"fc1a7bac6493f24aa50665574f37f3dd954f210c","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/post/index.styl","hash":"d0805a763176b3c0003967401644f41dfe3bc9e8","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/post/post-body.styl","hash":"ea351936d71e0b6259febac3d7d56d1be6927bf9","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/post/post-footer.styl","hash":"1d284f3ea03ba9b4feb76b375e539a8e0bccf1c3","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"b6677dc2a2368084ab82bb4f145ac79e5966c150","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"010c901e4ef49a606f8a350efbf09044e76d2ff3","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"07cff69f2d57e6321595f64c16d8b763dc88df6a","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/third-party/index.styl","hash":"b1bcc5f9357a9f8b8d6f8f285f073aaf3157f9db","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"070737d101e7cd58e997e8c7af09958268c43a21","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"41ed817e1eb64078074e245e771446ee041e5790","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":1637149283000},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"c8e95e8ac4cbdba01cb93e9e0569b45603e41bc6","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"83ee4993710fc8daa1c8dbfccd5d5091fd244c30","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/tags/index.styl","hash":"3f76c73a891bbc10679753e702feba9e8a5ffdd2","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/index.styl","hash":"0b3e2696eca39781c3524b2c5a2555ebc616e6e8","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"d27fbf7799695295dd5860a161a13ac4d90c5ba4","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/footer/index.styl","hash":"8b9407e5cfd0571ef8de7df19022b268f962fa2f","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/header/index.styl","hash":"650ed4ad6df1b6ff04647e7b6d568304e4d3ed2e","modified":1637149283000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"9b34143aec49e390e18f380026a45096f7477722","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"392fd53a8dd4e3f33a853ebb24290a622300e0ff","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"9a47c9045e443b8d20932f9c564a3a05fa4c6b51","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"9950c3188a28e1c63b5498b7bdcd14b12ace3e28","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/sidebar/index.styl","hash":"cee43480eba028c37d51cb620c2d81486aa24e01","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"b926e368f702f8686aaa2eb98d3d2e533418958c","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"fbdb63c6a8887d19b7137325ba7d6806f728139c","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"3103b81fc76b59e1e2c161e2c484625c770ed66f","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"ee94a1a27090ad24e3ed579093088d97ff96d77d","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":1637149283000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"021a37cf178440cc341940a299d3bca359996c6b","modified":1637149283000},{"_id":"themes/next/source/images/avatar.gif","hash":"329ff2d086c5f073c8ddb389bf9c9cb6f33443f8","modified":1637149283000},{"_id":"source/_posts/vue生命周期/vue的生命周期.jpg","hash":"9a9ba79a6c54440002bd1dd4a9f4260f37eec9b8","modified":1637239629630},{"_id":"public/search.xml","hash":"bb4eb66e9bd0beb48df451facec8cd9f40c95741","modified":1637242393512},{"_id":"public/categories/index.html","hash":"8e367a786e9ad700e35bc37c592b7742e81080e7","modified":1637242393512},{"_id":"public/about/index.html","hash":"2863146cd6e4bc1f6c36affe53db985564ed5948","modified":1637242393512},{"_id":"public/tags/index.html","hash":"95aa0d08ff27d7f67e3d9894a316436e9adfa64b","modified":1637242393512},{"_id":"public/2019/11/18/vue生命周期/index.html","hash":"42acf2288b058a1d3643a7a2cbe8d131963f120a","modified":1637242393512},{"_id":"public/archives/index.html","hash":"5594a61ed85979d84d9267efad975fc4c7898cb7","modified":1637242393512},{"_id":"public/archives/2019/index.html","hash":"eded420f2f68d89bad3e21821d17cfe9d250bdaa","modified":1637242393512},{"_id":"public/archives/2019/11/index.html","hash":"250b9e7b9f2936abff3dbb2615f80f7104afc11c","modified":1637242393512},{"_id":"public/categories/vue/index.html","hash":"6e45da89cf8baf439e823443abe0eec0e513d1c8","modified":1637242393512},{"_id":"public/tags/前端/index.html","hash":"d1748f4d606c219a5891530157e4cbe06df8bb1f","modified":1637242393512},{"_id":"public/tags/vue/index.html","hash":"e0d33e1b3c6f82a7df25bc2a9ae59739d1c66e50","modified":1637242393512},{"_id":"public/2019/11/17/vue组件使用/index.html","hash":"418b01a860086c2a9af5419de86f78b1a47671f9","modified":1637242393512},{"_id":"public/2019/11/15/vue基础属性/index.html","hash":"55c64915cce97cf9c4d0954b3185f1ec1df23cfa","modified":1637242393512},{"_id":"public/2019/11/11/vue基础入门/index.html","hash":"ff1f07d84d9891ed54e18ef0e0e5047f40a56d4e","modified":1637242393512},{"_id":"public/index.html","hash":"f15ba9e3bd413c25adebf8f0e00eaeb81182ed5b","modified":1637242393512},{"_id":"public/images/alipay.png","hash":"aded05f9c164ad0ce65fef57689f714831c126f4","modified":1637242393512},{"_id":"public/images/---avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1637242393512},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1637242393512},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1637242393512},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1637242393512},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1637242393512},{"_id":"public/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1637242393512},{"_id":"public/2019/11/11/vue基础入门/image-20211114091321486.png","hash":"1bc883b149376205128b1d85f8490baf0dbf6f0b","modified":1637242393512},{"_id":"public/images/wechatpay.png","hash":"0f6e7a989e9dd2a343fb5ca5c2b27218e6819238","modified":1637242393512},{"_id":"public/2019/11/11/vue基础入门/image-20211114091321486-16368533833712.png","hash":"1bc883b149376205128b1d85f8490baf0dbf6f0b","modified":1637242393512},{"_id":"public/2019/11/11/vue基础入门/image-20211114091337628-16368533729791.png","hash":"2ffe2f52c26a69304988e55db34edd5cfdcfb725","modified":1637242393512},{"_id":"public/2019/11/11/vue基础入门/image-20211114091337628.png","hash":"2ffe2f52c26a69304988e55db34edd5cfdcfb725","modified":1637242393512},{"_id":"public/2019/11/11/vue基础入门/image-20211114091405800.png","hash":"e34d75acf12a257851e8304c0f0a342a75ac64b7","modified":1637242393512},{"_id":"public/2019/11/11/vue基础入门/image-20211114143420078.png","hash":"1bc883b149376205128b1d85f8490baf0dbf6f0b","modified":1637242393512},{"_id":"public/2019/11/11/vue基础入门/image-20211114143428305.png","hash":"2ffe2f52c26a69304988e55db34edd5cfdcfb725","modified":1637242393512},{"_id":"public/2019/11/11/vue基础入门/image-20211114143435985.png","hash":"e34d75acf12a257851e8304c0f0a342a75ac64b7","modified":1637242393512},{"_id":"public/images/avatar.gif","hash":"329ff2d086c5f073c8ddb389bf9c9cb6f33443f8","modified":1637242393512},{"_id":"public/2019/11/15/vue基础属性/image-20211115152931976.png","hash":"2bfbeab9fd6aaf0136b9cc80f0bf2e248378c756","modified":1637242393512},{"_id":"public/2019/11/15/vue基础属性/image-20211115153036413.png","hash":"9411a731fd1cd206392b98167b4e4557ad5b2b4d","modified":1637242393512},{"_id":"public/2019/11/15/vue基础属性/image-20211115153220820.png","hash":"9afa99617521880f1e27e8f16d75a2489be956da","modified":1637242393512},{"_id":"public/css/noscript.css","hash":"54d14cd43dc297950a4a8d39ec9644dd5fc3499f","modified":1637242393512},{"_id":"public/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1637242393512},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1637242393512},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1637242393512},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1637242393512},{"_id":"public/js/next-boot.js","hash":"48497e2156a10155dc42311633a110c9685692c9","modified":1637242393512},{"_id":"public/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":1637242393512},{"_id":"public/js/pjax.js","hash":"919f5281c4a04d11cfd94573ecf57b3dbabd3cc8","modified":1637242393512},{"_id":"public/js/schedule.js","hash":"2b43e2d576a308289880befc27580dbb2aa34439","modified":1637242393512},{"_id":"public/js/utils.js","hash":"e447160d342b1f93df5214b6a733441039ced439","modified":1637242393512},{"_id":"public/js/schemes/muse.js","hash":"9a836d2bcc3defe4bd1ee51f5f4eb7006ebdd41b","modified":1637242393512},{"_id":"public/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1637242393512},{"_id":"public/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":1637242393512},{"_id":"public/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1637242393512},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1637242393512},{"_id":"public/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1637242393512},{"_id":"public/js/third-party/quicklink.js","hash":"6f58cd7aa8f6f1ab92d5a96551add293f4e55312","modified":1637242393512},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1637242393512},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1637242393512},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1637242393512},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1637242393512},{"_id":"public/js/third-party/comments/changyan.js","hash":"8c8ebec444c727b704ea41ad88b0b96ed2e4b8d4","modified":1637242393512},{"_id":"public/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1637242393512},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":1637242393512},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1637242393512},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1637242393512},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1637242393512},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1637242393512},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1637242393512},{"_id":"public/js/third-party/statistics/firestore.js","hash":"0960f16107ed61452fb0dffc6ed22dc143de34ef","modified":1637242393512},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1637242393512},{"_id":"public/js/third-party/search/local-search.js","hash":"45c485f82258d246f37deb66884bd2643323ef3a","modified":1637242393512},{"_id":"public/js/third-party/search/algolia-search.js","hash":"ac401e3736d56a3c9cb85ab885744cce0b813c55","modified":1637242393512},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"5a928990856b8e456f0663cf3b6b406733672e39","modified":1637242393512},{"_id":"public/js/third-party/tags/mermaid.js","hash":"3dc4628efa6debd6490fc0ebddff2424a7b319d8","modified":1637242393512},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1637242393512},{"_id":"public/css/main.css","hash":"fbe0619a742ca827fa23b43f5fb0d8b995a9e76a","modified":1637242393512},{"_id":"public/2019/11/11/vue基础入门/image-20211114091424285.png","hash":"f59673b2d0f6871c025e28902f48b49ad16ec114","modified":1637242393512},{"_id":"public/2019/11/18/vue生命周期/vue的生命周期.jpg","hash":"9a9ba79a6c54440002bd1dd4a9f4260f37eec9b8","modified":1637242393512}],"Category":[{"name":"vue","_id":"ckw4zukoz0004a0tyg7087m7e"}],"Data":[{"_id":"styles","data":"body {\n  background: url(\"/images/background.gif\");\n  background-repeat: repeat;\n  background-attachment: fixed;\n}\n.content-wrap {\n  opacity: 0.8;\n}\n.sidebar {\n  opacity: 0.8;\n}\n.header-inner {\n  background: rgba(255,255,255,0.8);\n}\n.popup {\n  opacity: 0.8;\n}\n"}],"Page":[{"title":"分类","date":"2021-11-14T11:39:47.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-11-14 19:39:47\ntype: \"categories\"\n---\n","updated":"2021-11-17T11:41:23.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckw4zukov0000a0tyfa70ezy5","content":"","site":{"data":{"styles":"body {\n  background: url(\"/images/background.gif\");\n  background-repeat: repeat;\n  background-attachment: fixed;\n}\n.content-wrap {\n  opacity: 0.9;\n}\n.sidebar {\n  opacity: 0.9;\n}\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n.popup {\n  opacity: 0.9;\n}\n"}},"excerpt":"","more":""},{"title":"关于","date":"2021-11-14T12:17:13.000Z","type":"about","_content":"\n\n\n\n\n\n\n\n\n个人信息: \n\n这个人很懒~ ~ ~ 完全不想说什么\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2021-11-14 20:17:13\ntype: \"about\"\n---\n\n\n\n\n\n\n\n\n\n个人信息: \n\n这个人很懒~ ~ ~ 完全不想说什么\n","updated":"2021-11-17T11:41:23.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckw4zukoy0002a0tyedqn7qs6","content":"<p>个人信息: </p>\n<p>这个人很懒~ ~ ~ 完全不想说什么</p>\n","site":{"data":{"styles":"body {\n  background: url(\"/images/background.gif\");\n  background-repeat: repeat;\n  background-attachment: fixed;\n}\n.content-wrap {\n  opacity: 0.9;\n}\n.sidebar {\n  opacity: 0.9;\n}\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n.popup {\n  opacity: 0.9;\n}\n"}},"excerpt":"","more":"<p>个人信息: </p>\n<p>这个人很懒~ ~ ~ 完全不想说什么</p>\n"},{"title":"标签","date":"2021-11-14T07:46:00.000Z","type":"tags","_content":"\n","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2021-11-14 15:46\ntype: \"tags\"\n---\n\n","updated":"2021-11-17T11:41:23.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckw4zukp00006a0tyh2avb0ov","content":"","site":{"data":{"styles":"body {\n  background: url(\"/images/background.gif\");\n  background-repeat: repeat;\n  background-attachment: fixed;\n}\n.content-wrap {\n  opacity: 0.9;\n}\n.sidebar {\n  opacity: 0.9;\n}\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n.popup {\n  opacity: 0.9;\n}\n"}},"excerpt":"","more":""}],"Post":[{"title":"vue基础入门","date":"2019-11-10T16:00:15.000Z","_content":"\n\n\n\n\n\n\n# 基础配置及指令\n\n<!--more-->\n\n## 1-搭建脚手架\n\n(建议全局配置, 开箱即用 0配置)\n\n### 1.新建文件夹(不能包含中文) cmd开启指令 \n\n### 2.全局安装:\n\n```cmd\nyarn global add @vue/cli\n# OR\nnpm install -g @vue/cli\n\n#如果半天没反应,ctrl c 停止重来\n```\n\n\n\n查看版本:\n\n```cmd\nvue -V\n# 出现版本号则表示安装成功\n```\n\n\n\n### 3.创建项目:\n\n```cmd\n# vue和create是命令, vuecli-demo是文件夹名\nvue create vuecli-demo\n```\n\n\n\n### 4.选择模板:(`选错可以ctrl C 重来`)\n\n![image-20211114143420078](vue基础入门/image-20211114143420078.png)\n\n### 5.选择什么方式下载脚手架依赖包:\n\n![image-20211114143428305](vue基础入门/image-20211114143428305.png)\n\n### 6.回车等待生成项目文件夹+文件+下载必须的第三方包们\n\n![image-20211114143435985](vue基础入门/image-20211114143435985.png)\n\n### 7.进入脚手架项目下, 启动内置的热更新本地服务器\n\n```cmd\ncd vuecil-demo\n\nnpm run serve\n# 或\nyarn serve\n```\n\n\n\n### 8.打开浏览器输入上述地址:\n\n* ![image-20211114091424285](vue基础入门/image-20211114091424285.png)\n\n  \n\n  目录分析:\n\n  ```cmd\n  vuecil-demo        # 项目目录\n     ├── node_modules # 项目依赖的第三方包\n     ├── public       # 静态文件目录\n       ├── favicon.ico# 浏览器小图标\n       └── index.html # 单页面的html文件(网页浏览的是它)\n     ├── src          # 业务文件夹\n       ├── assets     # 静态资源\n         └── logo.png # vue的logo图片\n       ├── components # 组件目录\n         └── HelloWorld.vue # 欢迎页面vue代码文件 \n       ├── App.vue    # 整个应用的根组件\n       └── main.js    # 入口js文件\n     ├── .gitignore   # git提交忽略配置\n     ├── babel.config.js  # babel配置\n     ├── package.json  # 依赖包列表\n     ├── README.md    # 项目说明\n   \t└── yarn.lock    # 项目包版本锁定和缓存地址\n  ```\n\n  \n\n  \n\n  主要文件及含义:\n  \n  ```js\n    node_modules下都是下载的第三方包\n    public/index.html – 浏览器运行的网页\n    src/main.js – webpack打包的入口文件\n    src/App.vue – vue项目入口页面\n    package.json – 依赖包列表文件\n  ```\n  \n  \n\n==关闭eslint检查:==\n\n在vue.config.js 里面 添加配置项 重启服务器\n\n```js\nmodule.exports = {\n  lintOnSave: false, //暂时关闭eslint检查\n  devServer: {\n    // 自定义服务配置\n    open: true, // 自动打开浏览器\n    port: 3000\n  }\n}\n```\n\n\n\n\n\n## 2-vue基础指令:\n\n`在vue中，通过数据驱动视图，不要在想着怎么操作DOM，而是想着如何操作数据！`\n\n### 1) 插值表达式\n\n插值表达式又叫: 声明式渲染/文本插值/大胡子语法\n\n作用: 在dom标签中, 直接插入内容\n\n语法: {{ 表达式 }}\n\n### 2) v-bind\n\n动态绑定:目标：给标签属性设置Vue变量的值\n\n- 语法：`v-bind:属性名=\"vue变量\"`\n- 简写：`:属性名=\"vue变量\"`\n\n```vue\n<!-- vue指令-v-bind属性动态赋值 -->\n<a v-bind:href=\"url\">我是a标签</a>\n<img :src=\"imgSrc\">\n```\n\n### 3) v-on:\n\n作用:给标签绑定事件\n\n#### 1:v-on语法\n\n语法 :\n\n* `v-on:事件名=“methods中的函数名\" `\n\n* `v-on:事件名=“methods中的函数名(实参)\" `\n\n简写: \n\n* `@事件名=\"methods中的函数\"`\n\n```vue\n<!-- vue指令:   v-on事件绑定-->\n<p>你要买商品的数量: {{count}}</p>\n<button v-on:click=\"addFn\">增加1个</button>\n<button v-on:click=\"addCountFn(5)\">一次加5件</button>\n\n<button @click=\"subFn\">减少</button> //v-on:可以简写成@\n\n<script>\n    export default {\n        // ...其他省略\n        methods: {\n            addFn(){ \n                // this代表export default后面的组件对象(下属有data里return出来的属性)\n                this.count++\n            },\n            addCountFn(num){\n                this.count += num\n            },\n            subFn(){\n                this.count--\n            }\n        }\n    }\n</script>\n```\n\n#### 2:v-on事件对象\n\n作用: vue事件处理函数中, 拿到事件对象\n\n语法:\n\n* `无传参, 通过形参直接接收`\n* `传参, 通过$event指代事件对象传给事件处理函数`\n\n```vue\n<template>\n  <div>\n    <a @click=\"one\" href=\"http://www.baidu.com\">阻止百度</a>\n    <hr>\n    <a @click=\"two(10, $event)\" href=\"http://www.baidu.com\">阻止去百度</a>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    one(e){\n      e.preventDefault()\n    },\n    two(num, e){\n      e.preventDefault()\n    }\n  }\n}\n</script>\n```\n\n#### 3:v-on修饰符\n\n作用: 事件.修饰符名 - 给事件带来更强大的功能\n\n语法:\n\n* `@事件名.修饰符=\"methods里函数\" `\n\n 修饰符列表 \n\n* `.stop - 阻止事件冒泡 `\n\n* `.prevent - 阻止默认行为`\n\n```vue\n <!-- vue对事件进行了修饰符设置, 在事件后面.修饰符名即可使用更多的功能 -->\n    <button @click.stop=\"btn\">.stop阻止事件冒泡</button>\n    <a href=\"http://www.baidu.com\" @click.prevent=\"btn\">.prevent阻止默认行为</a>\n```\n\n#### 4:v-on案件修饰符\n\n作用:给键盘事件, 添加修饰符, 增强能力\n\n语法: \n\n* `@keyup.enter - 监测回车按键 `\n* `@keyup.esc - 监测返回按键`\n\n```vue\n<input type=\"text\" @keydown.enter=\"enterFn\">  //回车键触发\n<input type=\"text\" @keydown.esc=\"escFn\">  //返回键触发\n```\n\n### 4) v-model:\n\n作用: 把表单值和Vue变量双向绑定\n\n基础阶段v-model只能用在表单元素上, 以后学组件后讲v-model高级用法\n\n语法: `v-model=\"vue数据变量\"`\n\n双向数据绑定 :\n\n* 变量变化 -> 视图自动同步\n* 视图变化 -> 变量自动同步\n\n#### 1:绑定input\n\n```vue\n<!--    v-model:是实现vuejs变量和表单标签value属性, 双向绑定的指令 -->\n    <div>\n      <span>用户名:</span>\n      <input type=\"text\" v-model=\"username\" />\n    </div>\n```\n\n#### 2:绑定其他表单标签\n\nv-model绑定:select, checkbox, radio,  textarea:\n\n```vue\n<template>\n  <div>\n    <div>\n      <span>来自于: </span>\n      <!-- 下拉菜单要绑定在select上 -->\n      <select v-model=\"from\">\n        <option value=\"北京市\">北京</option>\n        <option value=\"南京市\">南京</option>\n        <option value=\"天津市\">天津</option>\n      </select>\n      <!-- (重要)\n      遇到复选框, v-model的变量值\n      非数组 - 关联的是复选框的checked属性\n      数组   - 关联的是复选框的value属性 -->\n      <span>爱好: </span>\n      <input type=\"checkbox\" v-model=\"hobby\" value=\"抽烟\">抽烟\n      <input type=\"checkbox\" v-model=\"hobby\" value=\"喝酒\">喝酒\n      <input type=\"checkbox\" v-model=\"hobby\" value=\"写代码\">写代码\n    </div>\n    <div>\n      <span>性别: </span>\n      <input type=\"radio\" value=\"男\" name=\"sex\" v-model=\"gender\">男\n      <input type=\"radio\" value=\"女\" name=\"sex\" v-model=\"gender\">女\n    </div>\n    <div>\n      <span>自我介绍</span>\n      <textarea v-model=\"intro\"></textarea>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      from: \"\",\n      hobby: [], \n      sex: \"\",\n      intro: \"\",\n    };\n    // 总结:\n    // 特别注意: v-model, 在input[checkbox]的多选框状态\n    // 变量为非数组, 则绑定的是checked的属性(true/false) - 常用于: 单个绑定使用\n    // 变量为数组, 则绑定的是他们的value属性里的值 - 常用于: 收集勾选了哪些值\n  }\n};\n</script>\n```\n\n\n\n#### 3:v-model修饰符\n\n作用:给v-model扩展额外功能\n\n语法:\n\n`v-model.修饰符=\"vue数据变量\"`\n\n* .number   以parseFloat转成数字类型\n* .trim          去除首尾空白字符\n* .lazy           在change时触发而非inupt时\n\n```vue\n<template>\n  <div>\n    <div>\n      <span>年龄:</span>\n      <input type=\"text\" v-model.number=\"age\">\n    </div>\n    <div>\n      <span>人生格言:</span>\n      <input type=\"text\" v-model.trim=\"motto\">\n    </div>\n    <div>\n      <span>自我介绍:</span>\n      <textarea v-model.lazy=\"intro\"></textarea>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      age: \"\",\n      motto: \"\",\n      intro: \"\"\n    }\n  }\n}\n</script>\n```\n\n### 5) v-html\n\n作用:设置标签显示的内容\n\n* 语法:\n  * `v-html=\"vue数据变量\"`\n* 注意: 会覆盖插值表达式\n\n```vue\n<template>\n  <div>\n    <p v-html=\"str\"></p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      str: \"<span>我是一个span标签</span>\"\n    }\n  }\n}\n</script>\n```\n\n==v-html与插值表达式区别是什么？==\n\n* 插值表达式把值当成普通字符串显示\n* v-html把值当成标签进行解析显示\n\n### 6) v-for 和 v-if\n\n作用:控制标签显示与隐藏\n\n* 语法:\n  * `v-show=\"vue变量\"     `       \n  * `v-if=\"vue变量\" `\n* 原理(区别)\n  * v-show 用的display:none隐藏   (频繁切换使用)\n  * v-if  直接从DOM树上移除\n* 高级\n  * v-else使用\n\n```vue\n<template>\n  <div>\n    <h1 v-show=\"isOk\">v-show的盒子</h1>\n    <h1 v-if=\"isOk\">v-if的盒子</h1>\n\n    <div>\n      <p v-if=\"age > 18\">我成年了</p>\n      <p v-else>还得多吃饭</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      isOk: true,\n      age: 15\n    }\n  }\n}\n</script>\n```\n\n### 7) v-for:\n\n作用:循环遍历数据生成标签:\n\n* 语法\n\n  * `v-for=\"(值变量, 索引变量) in 目标结构\"`\n  * `v-for=\"值变量 in 目标结构\"`\n\n* 目标结构:\n\n  * 可以遍历数组 / 对象 / 数字 / 字符串\n\n* 注意:\n\n  v-for的临时变量名不能用到v-for范围外\n\n  同级标签的key值不能重复\n\n#### 1:遍历数组\n\n```vue\n<template>\n  <div id=\"app\">\n      <!-- v-for 把一组数据, 渲染成一组DOM -->\n      <!-- 口诀: 让谁循环生成, v-for就写谁身上 -->\n      <p>学生姓名</p>\n      <ul>\n        <li v-for=\"(item, index) in arr\" :key=\"item\">\n          {{ index }} - {{ item }}\n        </li>\n      </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      arr: [\"小明\", \"小欢欢\", \"大黄\"]\n  }\n}\n</script>\n```\n\n#### 2:遍历数组内对象\n\n```vue\n<template>\n  <div id=\"app\">\n      <!-- 省略其他 -->\n      <p>学生详细信息</p>\n      <ul>\n        <li v-for=\"obj in stuArr\" :key=\"obj.id\">\n          <span>{{ obj.name }}</span>\n          <span>{{ obj.sex }}</span>\n          <span>{{ obj.hobby }}</span>\n        </li>\n      </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // ...省略其他\n      stuArr: [\n        {\n          id: 1001,\n          name: \"孙悟空\",\n          sex: \"男\",\n          hobby: \"吃桃子\",\n        },\n        {\n          id: 1002,\n          name: \"猪八戒\",\n          sex: \"男\",\n          hobby: \"背媳妇\",\n        }\n      ]\n    }\n  }\n}\n</script>\n```\n\n\n\n","source":"_posts/vue基础入门.md","raw":"---\ntitle: vue基础入门\ndate: 2019-11-11 00:00:15\ntags:\n   - 前端\n   - vue\ncategories: \n   - vue\n---\n\n\n\n\n\n\n\n# 基础配置及指令\n\n<!--more-->\n\n## 1-搭建脚手架\n\n(建议全局配置, 开箱即用 0配置)\n\n### 1.新建文件夹(不能包含中文) cmd开启指令 \n\n### 2.全局安装:\n\n```cmd\nyarn global add @vue/cli\n# OR\nnpm install -g @vue/cli\n\n#如果半天没反应,ctrl c 停止重来\n```\n\n\n\n查看版本:\n\n```cmd\nvue -V\n# 出现版本号则表示安装成功\n```\n\n\n\n### 3.创建项目:\n\n```cmd\n# vue和create是命令, vuecli-demo是文件夹名\nvue create vuecli-demo\n```\n\n\n\n### 4.选择模板:(`选错可以ctrl C 重来`)\n\n![image-20211114143420078](vue基础入门/image-20211114143420078.png)\n\n### 5.选择什么方式下载脚手架依赖包:\n\n![image-20211114143428305](vue基础入门/image-20211114143428305.png)\n\n### 6.回车等待生成项目文件夹+文件+下载必须的第三方包们\n\n![image-20211114143435985](vue基础入门/image-20211114143435985.png)\n\n### 7.进入脚手架项目下, 启动内置的热更新本地服务器\n\n```cmd\ncd vuecil-demo\n\nnpm run serve\n# 或\nyarn serve\n```\n\n\n\n### 8.打开浏览器输入上述地址:\n\n* ![image-20211114091424285](vue基础入门/image-20211114091424285.png)\n\n  \n\n  目录分析:\n\n  ```cmd\n  vuecil-demo        # 项目目录\n     ├── node_modules # 项目依赖的第三方包\n     ├── public       # 静态文件目录\n       ├── favicon.ico# 浏览器小图标\n       └── index.html # 单页面的html文件(网页浏览的是它)\n     ├── src          # 业务文件夹\n       ├── assets     # 静态资源\n         └── logo.png # vue的logo图片\n       ├── components # 组件目录\n         └── HelloWorld.vue # 欢迎页面vue代码文件 \n       ├── App.vue    # 整个应用的根组件\n       └── main.js    # 入口js文件\n     ├── .gitignore   # git提交忽略配置\n     ├── babel.config.js  # babel配置\n     ├── package.json  # 依赖包列表\n     ├── README.md    # 项目说明\n   \t└── yarn.lock    # 项目包版本锁定和缓存地址\n  ```\n\n  \n\n  \n\n  主要文件及含义:\n  \n  ```js\n    node_modules下都是下载的第三方包\n    public/index.html – 浏览器运行的网页\n    src/main.js – webpack打包的入口文件\n    src/App.vue – vue项目入口页面\n    package.json – 依赖包列表文件\n  ```\n  \n  \n\n==关闭eslint检查:==\n\n在vue.config.js 里面 添加配置项 重启服务器\n\n```js\nmodule.exports = {\n  lintOnSave: false, //暂时关闭eslint检查\n  devServer: {\n    // 自定义服务配置\n    open: true, // 自动打开浏览器\n    port: 3000\n  }\n}\n```\n\n\n\n\n\n## 2-vue基础指令:\n\n`在vue中，通过数据驱动视图，不要在想着怎么操作DOM，而是想着如何操作数据！`\n\n### 1) 插值表达式\n\n插值表达式又叫: 声明式渲染/文本插值/大胡子语法\n\n作用: 在dom标签中, 直接插入内容\n\n语法: {{ 表达式 }}\n\n### 2) v-bind\n\n动态绑定:目标：给标签属性设置Vue变量的值\n\n- 语法：`v-bind:属性名=\"vue变量\"`\n- 简写：`:属性名=\"vue变量\"`\n\n```vue\n<!-- vue指令-v-bind属性动态赋值 -->\n<a v-bind:href=\"url\">我是a标签</a>\n<img :src=\"imgSrc\">\n```\n\n### 3) v-on:\n\n作用:给标签绑定事件\n\n#### 1:v-on语法\n\n语法 :\n\n* `v-on:事件名=“methods中的函数名\" `\n\n* `v-on:事件名=“methods中的函数名(实参)\" `\n\n简写: \n\n* `@事件名=\"methods中的函数\"`\n\n```vue\n<!-- vue指令:   v-on事件绑定-->\n<p>你要买商品的数量: {{count}}</p>\n<button v-on:click=\"addFn\">增加1个</button>\n<button v-on:click=\"addCountFn(5)\">一次加5件</button>\n\n<button @click=\"subFn\">减少</button> //v-on:可以简写成@\n\n<script>\n    export default {\n        // ...其他省略\n        methods: {\n            addFn(){ \n                // this代表export default后面的组件对象(下属有data里return出来的属性)\n                this.count++\n            },\n            addCountFn(num){\n                this.count += num\n            },\n            subFn(){\n                this.count--\n            }\n        }\n    }\n</script>\n```\n\n#### 2:v-on事件对象\n\n作用: vue事件处理函数中, 拿到事件对象\n\n语法:\n\n* `无传参, 通过形参直接接收`\n* `传参, 通过$event指代事件对象传给事件处理函数`\n\n```vue\n<template>\n  <div>\n    <a @click=\"one\" href=\"http://www.baidu.com\">阻止百度</a>\n    <hr>\n    <a @click=\"two(10, $event)\" href=\"http://www.baidu.com\">阻止去百度</a>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    one(e){\n      e.preventDefault()\n    },\n    two(num, e){\n      e.preventDefault()\n    }\n  }\n}\n</script>\n```\n\n#### 3:v-on修饰符\n\n作用: 事件.修饰符名 - 给事件带来更强大的功能\n\n语法:\n\n* `@事件名.修饰符=\"methods里函数\" `\n\n 修饰符列表 \n\n* `.stop - 阻止事件冒泡 `\n\n* `.prevent - 阻止默认行为`\n\n```vue\n <!-- vue对事件进行了修饰符设置, 在事件后面.修饰符名即可使用更多的功能 -->\n    <button @click.stop=\"btn\">.stop阻止事件冒泡</button>\n    <a href=\"http://www.baidu.com\" @click.prevent=\"btn\">.prevent阻止默认行为</a>\n```\n\n#### 4:v-on案件修饰符\n\n作用:给键盘事件, 添加修饰符, 增强能力\n\n语法: \n\n* `@keyup.enter - 监测回车按键 `\n* `@keyup.esc - 监测返回按键`\n\n```vue\n<input type=\"text\" @keydown.enter=\"enterFn\">  //回车键触发\n<input type=\"text\" @keydown.esc=\"escFn\">  //返回键触发\n```\n\n### 4) v-model:\n\n作用: 把表单值和Vue变量双向绑定\n\n基础阶段v-model只能用在表单元素上, 以后学组件后讲v-model高级用法\n\n语法: `v-model=\"vue数据变量\"`\n\n双向数据绑定 :\n\n* 变量变化 -> 视图自动同步\n* 视图变化 -> 变量自动同步\n\n#### 1:绑定input\n\n```vue\n<!--    v-model:是实现vuejs变量和表单标签value属性, 双向绑定的指令 -->\n    <div>\n      <span>用户名:</span>\n      <input type=\"text\" v-model=\"username\" />\n    </div>\n```\n\n#### 2:绑定其他表单标签\n\nv-model绑定:select, checkbox, radio,  textarea:\n\n```vue\n<template>\n  <div>\n    <div>\n      <span>来自于: </span>\n      <!-- 下拉菜单要绑定在select上 -->\n      <select v-model=\"from\">\n        <option value=\"北京市\">北京</option>\n        <option value=\"南京市\">南京</option>\n        <option value=\"天津市\">天津</option>\n      </select>\n      <!-- (重要)\n      遇到复选框, v-model的变量值\n      非数组 - 关联的是复选框的checked属性\n      数组   - 关联的是复选框的value属性 -->\n      <span>爱好: </span>\n      <input type=\"checkbox\" v-model=\"hobby\" value=\"抽烟\">抽烟\n      <input type=\"checkbox\" v-model=\"hobby\" value=\"喝酒\">喝酒\n      <input type=\"checkbox\" v-model=\"hobby\" value=\"写代码\">写代码\n    </div>\n    <div>\n      <span>性别: </span>\n      <input type=\"radio\" value=\"男\" name=\"sex\" v-model=\"gender\">男\n      <input type=\"radio\" value=\"女\" name=\"sex\" v-model=\"gender\">女\n    </div>\n    <div>\n      <span>自我介绍</span>\n      <textarea v-model=\"intro\"></textarea>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      from: \"\",\n      hobby: [], \n      sex: \"\",\n      intro: \"\",\n    };\n    // 总结:\n    // 特别注意: v-model, 在input[checkbox]的多选框状态\n    // 变量为非数组, 则绑定的是checked的属性(true/false) - 常用于: 单个绑定使用\n    // 变量为数组, 则绑定的是他们的value属性里的值 - 常用于: 收集勾选了哪些值\n  }\n};\n</script>\n```\n\n\n\n#### 3:v-model修饰符\n\n作用:给v-model扩展额外功能\n\n语法:\n\n`v-model.修饰符=\"vue数据变量\"`\n\n* .number   以parseFloat转成数字类型\n* .trim          去除首尾空白字符\n* .lazy           在change时触发而非inupt时\n\n```vue\n<template>\n  <div>\n    <div>\n      <span>年龄:</span>\n      <input type=\"text\" v-model.number=\"age\">\n    </div>\n    <div>\n      <span>人生格言:</span>\n      <input type=\"text\" v-model.trim=\"motto\">\n    </div>\n    <div>\n      <span>自我介绍:</span>\n      <textarea v-model.lazy=\"intro\"></textarea>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      age: \"\",\n      motto: \"\",\n      intro: \"\"\n    }\n  }\n}\n</script>\n```\n\n### 5) v-html\n\n作用:设置标签显示的内容\n\n* 语法:\n  * `v-html=\"vue数据变量\"`\n* 注意: 会覆盖插值表达式\n\n```vue\n<template>\n  <div>\n    <p v-html=\"str\"></p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      str: \"<span>我是一个span标签</span>\"\n    }\n  }\n}\n</script>\n```\n\n==v-html与插值表达式区别是什么？==\n\n* 插值表达式把值当成普通字符串显示\n* v-html把值当成标签进行解析显示\n\n### 6) v-for 和 v-if\n\n作用:控制标签显示与隐藏\n\n* 语法:\n  * `v-show=\"vue变量\"     `       \n  * `v-if=\"vue变量\" `\n* 原理(区别)\n  * v-show 用的display:none隐藏   (频繁切换使用)\n  * v-if  直接从DOM树上移除\n* 高级\n  * v-else使用\n\n```vue\n<template>\n  <div>\n    <h1 v-show=\"isOk\">v-show的盒子</h1>\n    <h1 v-if=\"isOk\">v-if的盒子</h1>\n\n    <div>\n      <p v-if=\"age > 18\">我成年了</p>\n      <p v-else>还得多吃饭</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      isOk: true,\n      age: 15\n    }\n  }\n}\n</script>\n```\n\n### 7) v-for:\n\n作用:循环遍历数据生成标签:\n\n* 语法\n\n  * `v-for=\"(值变量, 索引变量) in 目标结构\"`\n  * `v-for=\"值变量 in 目标结构\"`\n\n* 目标结构:\n\n  * 可以遍历数组 / 对象 / 数字 / 字符串\n\n* 注意:\n\n  v-for的临时变量名不能用到v-for范围外\n\n  同级标签的key值不能重复\n\n#### 1:遍历数组\n\n```vue\n<template>\n  <div id=\"app\">\n      <!-- v-for 把一组数据, 渲染成一组DOM -->\n      <!-- 口诀: 让谁循环生成, v-for就写谁身上 -->\n      <p>学生姓名</p>\n      <ul>\n        <li v-for=\"(item, index) in arr\" :key=\"item\">\n          {{ index }} - {{ item }}\n        </li>\n      </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      arr: [\"小明\", \"小欢欢\", \"大黄\"]\n  }\n}\n</script>\n```\n\n#### 2:遍历数组内对象\n\n```vue\n<template>\n  <div id=\"app\">\n      <!-- 省略其他 -->\n      <p>学生详细信息</p>\n      <ul>\n        <li v-for=\"obj in stuArr\" :key=\"obj.id\">\n          <span>{{ obj.name }}</span>\n          <span>{{ obj.sex }}</span>\n          <span>{{ obj.hobby }}</span>\n        </li>\n      </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // ...省略其他\n      stuArr: [\n        {\n          id: 1001,\n          name: \"孙悟空\",\n          sex: \"男\",\n          hobby: \"吃桃子\",\n        },\n        {\n          id: 1002,\n          name: \"猪八戒\",\n          sex: \"男\",\n          hobby: \"背媳妇\",\n        }\n      ]\n    }\n  }\n}\n</script>\n```\n\n\n\n","slug":"vue基础入门","published":1,"updated":"2021-11-17T11:41:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckw4zukow0001a0tyghstejye","content":"<h1 id=\"基础配置及指令\"><a href=\"#基础配置及指令\" class=\"headerlink\" title=\"基础配置及指令\"></a>基础配置及指令</h1><span id=\"more\"></span>\n\n<h2 id=\"1-搭建脚手架\"><a href=\"#1-搭建脚手架\" class=\"headerlink\" title=\"1-搭建脚手架\"></a>1-搭建脚手架</h2><p>(建议全局配置, 开箱即用 0配置)</p>\n<h3 id=\"1-新建文件夹-不能包含中文-cmd开启指令\"><a href=\"#1-新建文件夹-不能包含中文-cmd开启指令\" class=\"headerlink\" title=\"1.新建文件夹(不能包含中文) cmd开启指令\"></a>1.新建文件夹(不能包含中文) cmd开启指令</h3><h3 id=\"2-全局安装\"><a href=\"#2-全局安装\" class=\"headerlink\" title=\"2.全局安装:\"></a>2.全局安装:</h3><pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">yarn global add @vue&#x2F;cli\n# OR\nnpm install -g @vue&#x2F;cli\n\n#如果半天没反应,ctrl c 停止重来<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>查看版本:</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">vue -V\n# 出现版本号则表示安装成功<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"3-创建项目\"><a href=\"#3-创建项目\" class=\"headerlink\" title=\"3.创建项目:\"></a>3.创建项目:</h3><pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\"># vue和create是命令, vuecli-demo是文件夹名\nvue create vuecli-demo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"4-选择模板-选错可以ctrl-C-重来\"><a href=\"#4-选择模板-选错可以ctrl-C-重来\" class=\"headerlink\" title=\"4.选择模板:(选错可以ctrl C 重来)\"></a>4.选择模板:(<code>选错可以ctrl C 重来</code>)</h3><p><img src=\"/2019/11/11/vue%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20211114143420078.png\" alt=\"image-20211114143420078\"></p>\n<h3 id=\"5-选择什么方式下载脚手架依赖包\"><a href=\"#5-选择什么方式下载脚手架依赖包\" class=\"headerlink\" title=\"5.选择什么方式下载脚手架依赖包:\"></a>5.选择什么方式下载脚手架依赖包:</h3><p><img src=\"/2019/11/11/vue%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20211114143428305.png\" alt=\"image-20211114143428305\"></p>\n<h3 id=\"6-回车等待生成项目文件夹-文件-下载必须的第三方包们\"><a href=\"#6-回车等待生成项目文件夹-文件-下载必须的第三方包们\" class=\"headerlink\" title=\"6.回车等待生成项目文件夹+文件+下载必须的第三方包们\"></a>6.回车等待生成项目文件夹+文件+下载必须的第三方包们</h3><p><img src=\"/2019/11/11/vue%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20211114143435985.png\" alt=\"image-20211114143435985\"></p>\n<h3 id=\"7-进入脚手架项目下-启动内置的热更新本地服务器\"><a href=\"#7-进入脚手架项目下-启动内置的热更新本地服务器\" class=\"headerlink\" title=\"7.进入脚手架项目下, 启动内置的热更新本地服务器\"></a>7.进入脚手架项目下, 启动内置的热更新本地服务器</h3><pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">cd vuecil-demo\n\nnpm run serve\n# 或\nyarn serve<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"8-打开浏览器输入上述地址\"><a href=\"#8-打开浏览器输入上述地址\" class=\"headerlink\" title=\"8.打开浏览器输入上述地址:\"></a>8.打开浏览器输入上述地址:</h3><ul>\n<li><p><img src=\"/2019/11/11/vue%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20211114091424285.png\" alt=\"image-20211114091424285\"></p>\n<p>目录分析:</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">vuecil-demo        # 项目目录\n   ├── node_modules # 项目依赖的第三方包\n   ├── public       # 静态文件目录\n     ├── favicon.ico# 浏览器小图标\n     └── index.html # 单页面的html文件(网页浏览的是它)\n   ├── src          # 业务文件夹\n     ├── assets     # 静态资源\n       └── logo.png # vue的logo图片\n     ├── components # 组件目录\n       └── HelloWorld.vue # 欢迎页面vue代码文件 \n     ├── App.vue    # 整个应用的根组件\n     └── main.js    # 入口js文件\n   ├── .gitignore   # git提交忽略配置\n   ├── babel.config.js  # babel配置\n   ├── package.json  # 依赖包列表\n   ├── README.md    # 项目说明\n \t└── yarn.lock    # 项目包版本锁定和缓存地址<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n<p>主要文件及含义:</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">node_modules下都是下载的第三方包\n<span class=\"token keyword\">public</span><span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>html – 浏览器运行的网页\nsrc<span class=\"token operator\">/</span>main<span class=\"token punctuation\">.</span>js – webpack打包的入口文件\nsrc<span class=\"token operator\">/</span>App<span class=\"token punctuation\">.</span>vue – vue项目入口页面\n<span class=\"token keyword\">package</span><span class=\"token punctuation\">.</span>json – 依赖包列表文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<p>==关闭eslint检查:==</p>\n<p>在vue.config.js 里面 添加配置项 重启服务器</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  lintOnSave<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//暂时关闭eslint检查</span>\n  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 自定义服务配置</span>\n    open<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 自动打开浏览器</span>\n    port<span class=\"token operator\">:</span> <span class=\"token number\">3000</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n<h2 id=\"2-vue基础指令\"><a href=\"#2-vue基础指令\" class=\"headerlink\" title=\"2-vue基础指令:\"></a>2-vue基础指令:</h2><p><code>在vue中，通过数据驱动视图，不要在想着怎么操作DOM，而是想着如何操作数据！</code></p>\n<h3 id=\"1-插值表达式\"><a href=\"#1-插值表达式\" class=\"headerlink\" title=\"1) 插值表达式\"></a>1) 插值表达式</h3><p>插值表达式又叫: 声明式渲染/文本插值/大胡子语法</p>\n<p>作用: 在dom标签中, 直接插入内容</p>\n<p>语法: </p>\n<h3 id=\"2-v-bind\"><a href=\"#2-v-bind\" class=\"headerlink\" title=\"2) v-bind\"></a>2) v-bind</h3><p>动态绑定:目标：给标签属性设置Vue变量的值</p>\n<ul>\n<li>语法：<code>v-bind:属性名=&quot;vue变量&quot;</code></li>\n<li>简写：<code>:属性名=&quot;vue变量&quot;</code></li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!-- vue指令-v-bind属性动态赋值 --&gt;\n&lt;a v-bind:href&#x3D;&quot;url&quot;&gt;我是a标签&lt;&#x2F;a&gt;\n&lt;img :src&#x3D;&quot;imgSrc&quot;&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-v-on\"><a href=\"#3-v-on\" class=\"headerlink\" title=\"3) v-on:\"></a>3) v-on:</h3><p>作用:给标签绑定事件</p>\n<h4 id=\"1-v-on语法\"><a href=\"#1-v-on语法\" class=\"headerlink\" title=\"1:v-on语法\"></a>1:v-on语法</h4><p>语法 :</p>\n<ul>\n<li><p><code>v-on:事件名=“methods中的函数名&quot; </code></p>\n</li>\n<li><p><code>v-on:事件名=“methods中的函数名(实参)&quot; </code></p>\n</li>\n</ul>\n<p>简写: </p>\n<ul>\n<li><code>@事件名=&quot;methods中的函数&quot;</code></li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!-- vue指令:   v-on事件绑定--&gt;\n&lt;p&gt;你要买商品的数量: &#123;&#123;count&#125;&#125;&lt;&#x2F;p&gt;\n&lt;button v-on:click&#x3D;&quot;addFn&quot;&gt;增加1个&lt;&#x2F;button&gt;\n&lt;button v-on:click&#x3D;&quot;addCountFn(5)&quot;&gt;一次加5件&lt;&#x2F;button&gt;\n\n&lt;button @click&#x3D;&quot;subFn&quot;&gt;减少&lt;&#x2F;button&gt; &#x2F;&#x2F;v-on:可以简写成@\n\n&lt;script&gt;\n    export default &#123;\n        &#x2F;&#x2F; ...其他省略\n        methods: &#123;\n            addFn()&#123; \n                &#x2F;&#x2F; this代表export default后面的组件对象(下属有data里return出来的属性)\n                this.count++\n            &#125;,\n            addCountFn(num)&#123;\n                this.count +&#x3D; num\n            &#125;,\n            subFn()&#123;\n                this.count--\n            &#125;\n        &#125;\n    &#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-v-on事件对象\"><a href=\"#2-v-on事件对象\" class=\"headerlink\" title=\"2:v-on事件对象\"></a>2:v-on事件对象</h4><p>作用: vue事件处理函数中, 拿到事件对象</p>\n<p>语法:</p>\n<ul>\n<li><code>无传参, 通过形参直接接收</code></li>\n<li><code>传参, 通过$event指代事件对象传给事件处理函数</code></li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;a @click&#x3D;&quot;one&quot; href&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;阻止百度&lt;&#x2F;a&gt;\n    &lt;hr&gt;\n    &lt;a @click&#x3D;&quot;two(10, $event)&quot; href&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;阻止去百度&lt;&#x2F;a&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  methods: &#123;\n    one(e)&#123;\n      e.preventDefault()\n    &#125;,\n    two(num, e)&#123;\n      e.preventDefault()\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"3-v-on修饰符\"><a href=\"#3-v-on修饰符\" class=\"headerlink\" title=\"3:v-on修饰符\"></a>3:v-on修饰符</h4><p>作用: 事件.修饰符名 - 给事件带来更强大的功能</p>\n<p>语法:</p>\n<ul>\n<li><code>@事件名.修饰符=&quot;methods里函数&quot; </code></li>\n</ul>\n<p> 修饰符列表 </p>\n<ul>\n<li><p><code>.stop - 阻止事件冒泡 </code></p>\n</li>\n<li><p><code>.prevent - 阻止默认行为</code></p>\n</li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!-- vue对事件进行了修饰符设置, 在事件后面.修饰符名即可使用更多的功能 --&gt;\n   &lt;button @click.stop&#x3D;&quot;btn&quot;&gt;.stop阻止事件冒泡&lt;&#x2F;button&gt;\n   &lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot; @click.prevent&#x3D;&quot;btn&quot;&gt;.prevent阻止默认行为&lt;&#x2F;a&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"4-v-on案件修饰符\"><a href=\"#4-v-on案件修饰符\" class=\"headerlink\" title=\"4:v-on案件修饰符\"></a>4:v-on案件修饰符</h4><p>作用:给键盘事件, 添加修饰符, 增强能力</p>\n<p>语法: </p>\n<ul>\n<li><code>@keyup.enter - 监测回车按键 </code></li>\n<li><code>@keyup.esc - 监测返回按键</code></li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;input type&#x3D;&quot;text&quot; @keydown.enter&#x3D;&quot;enterFn&quot;&gt;  &#x2F;&#x2F;回车键触发\n&lt;input type&#x3D;&quot;text&quot; @keydown.esc&#x3D;&quot;escFn&quot;&gt;  &#x2F;&#x2F;返回键触发<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-v-model\"><a href=\"#4-v-model\" class=\"headerlink\" title=\"4) v-model:\"></a>4) v-model:</h3><p>作用: 把表单值和Vue变量双向绑定</p>\n<p>基础阶段v-model只能用在表单元素上, 以后学组件后讲v-model高级用法</p>\n<p>语法: <code>v-model=&quot;vue数据变量&quot;</code></p>\n<p>双向数据绑定 :</p>\n<ul>\n<li>变量变化 -&gt; 视图自动同步</li>\n<li>视图变化 -&gt; 变量自动同步</li>\n</ul>\n<h4 id=\"1-绑定input\"><a href=\"#1-绑定input\" class=\"headerlink\" title=\"1:绑定input\"></a>1:绑定input</h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!--    v-model:是实现vuejs变量和表单标签value属性, 双向绑定的指令 --&gt;\n    &lt;div&gt;\n      &lt;span&gt;用户名:&lt;&#x2F;span&gt;\n      &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;username&quot; &#x2F;&gt;\n    &lt;&#x2F;div&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-绑定其他表单标签\"><a href=\"#2-绑定其他表单标签\" class=\"headerlink\" title=\"2:绑定其他表单标签\"></a>2:绑定其他表单标签</h4><p>v-model绑定:select, checkbox, radio,  textarea:</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;div&gt;\n      &lt;span&gt;来自于: &lt;&#x2F;span&gt;\n      &lt;!-- 下拉菜单要绑定在select上 --&gt;\n      &lt;select v-model&#x3D;&quot;from&quot;&gt;\n        &lt;option value&#x3D;&quot;北京市&quot;&gt;北京&lt;&#x2F;option&gt;\n        &lt;option value&#x3D;&quot;南京市&quot;&gt;南京&lt;&#x2F;option&gt;\n        &lt;option value&#x3D;&quot;天津市&quot;&gt;天津&lt;&#x2F;option&gt;\n      &lt;&#x2F;select&gt;\n      &lt;!-- (重要)\n      遇到复选框, v-model的变量值\n      非数组 - 关联的是复选框的checked属性\n      数组   - 关联的是复选框的value属性 --&gt;\n      &lt;span&gt;爱好: &lt;&#x2F;span&gt;\n      &lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;hobby&quot; value&#x3D;&quot;抽烟&quot;&gt;抽烟\n      &lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;hobby&quot; value&#x3D;&quot;喝酒&quot;&gt;喝酒\n      &lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;hobby&quot; value&#x3D;&quot;写代码&quot;&gt;写代码\n    &lt;&#x2F;div&gt;\n    &lt;div&gt;\n      &lt;span&gt;性别: &lt;&#x2F;span&gt;\n      &lt;input type&#x3D;&quot;radio&quot; value&#x3D;&quot;男&quot; name&#x3D;&quot;sex&quot; v-model&#x3D;&quot;gender&quot;&gt;男\n      &lt;input type&#x3D;&quot;radio&quot; value&#x3D;&quot;女&quot; name&#x3D;&quot;sex&quot; v-model&#x3D;&quot;gender&quot;&gt;女\n    &lt;&#x2F;div&gt;\n    &lt;div&gt;\n      &lt;span&gt;自我介绍&lt;&#x2F;span&gt;\n      &lt;textarea v-model&#x3D;&quot;intro&quot;&gt;&lt;&#x2F;textarea&gt;\n    &lt;&#x2F;div&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data() &#123;\n    return &#123;\n      from: &quot;&quot;,\n      hobby: [], \n      sex: &quot;&quot;,\n      intro: &quot;&quot;,\n    &#125;;\n    &#x2F;&#x2F; 总结:\n    &#x2F;&#x2F; 特别注意: v-model, 在input[checkbox]的多选框状态\n    &#x2F;&#x2F; 变量为非数组, 则绑定的是checked的属性(true&#x2F;false) - 常用于: 单个绑定使用\n    &#x2F;&#x2F; 变量为数组, 则绑定的是他们的value属性里的值 - 常用于: 收集勾选了哪些值\n  &#125;\n&#125;;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"3-v-model修饰符\"><a href=\"#3-v-model修饰符\" class=\"headerlink\" title=\"3:v-model修饰符\"></a>3:v-model修饰符</h4><p>作用:给v-model扩展额外功能</p>\n<p>语法:</p>\n<p><code>v-model.修饰符=&quot;vue数据变量&quot;</code></p>\n<ul>\n<li>.number   以parseFloat转成数字类型</li>\n<li>.trim          去除首尾空白字符</li>\n<li>.lazy           在change时触发而非inupt时</li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;div&gt;\n      &lt;span&gt;年龄:&lt;&#x2F;span&gt;\n      &lt;input type&#x3D;&quot;text&quot; v-model.number&#x3D;&quot;age&quot;&gt;\n    &lt;&#x2F;div&gt;\n    &lt;div&gt;\n      &lt;span&gt;人生格言:&lt;&#x2F;span&gt;\n      &lt;input type&#x3D;&quot;text&quot; v-model.trim&#x3D;&quot;motto&quot;&gt;\n    &lt;&#x2F;div&gt;\n    &lt;div&gt;\n      &lt;span&gt;自我介绍:&lt;&#x2F;span&gt;\n      &lt;textarea v-model.lazy&#x3D;&quot;intro&quot;&gt;&lt;&#x2F;textarea&gt;\n    &lt;&#x2F;div&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data() &#123;\n    return &#123;\n      age: &quot;&quot;,\n      motto: &quot;&quot;,\n      intro: &quot;&quot;\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"5-v-html\"><a href=\"#5-v-html\" class=\"headerlink\" title=\"5) v-html\"></a>5) v-html</h3><p>作用:设置标签显示的内容</p>\n<ul>\n<li>语法:<ul>\n<li><code>v-html=&quot;vue数据变量&quot;</code></li>\n</ul>\n</li>\n<li>注意: 会覆盖插值表达式</li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;p v-html&#x3D;&quot;str&quot;&gt;&lt;&#x2F;p&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data() &#123;\n    return &#123;\n      str: &quot;&lt;span&gt;我是一个span标签&lt;&#x2F;span&gt;&quot;\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>==v-html与插值表达式区别是什么？==</p>\n<ul>\n<li>插值表达式把值当成普通字符串显示</li>\n<li>v-html把值当成标签进行解析显示</li>\n</ul>\n<h3 id=\"6-v-for-和-v-if\"><a href=\"#6-v-for-和-v-if\" class=\"headerlink\" title=\"6) v-for 和 v-if\"></a>6) v-for 和 v-if</h3><p>作用:控制标签显示与隐藏</p>\n<ul>\n<li>语法:<ul>\n<li><code>v-show=&quot;vue变量&quot;     </code>       </li>\n<li><code>v-if=&quot;vue变量&quot; </code></li>\n</ul>\n</li>\n<li>原理(区别)<ul>\n<li>v-show 用的display:none隐藏   (频繁切换使用)</li>\n<li>v-if  直接从DOM树上移除</li>\n</ul>\n</li>\n<li>高级<ul>\n<li>v-else使用</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1 v-show&#x3D;&quot;isOk&quot;&gt;v-show的盒子&lt;&#x2F;h1&gt;\n    &lt;h1 v-if&#x3D;&quot;isOk&quot;&gt;v-if的盒子&lt;&#x2F;h1&gt;\n\n    &lt;div&gt;\n      &lt;p v-if&#x3D;&quot;age &gt; 18&quot;&gt;我成年了&lt;&#x2F;p&gt;\n      &lt;p v-else&gt;还得多吃饭&lt;&#x2F;p&gt;\n    &lt;&#x2F;div&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data() &#123;\n    return &#123;\n      isOk: true,\n      age: 15\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-v-for\"><a href=\"#7-v-for\" class=\"headerlink\" title=\"7) v-for:\"></a>7) v-for:</h3><p>作用:循环遍历数据生成标签:</p>\n<ul>\n<li><p>语法</p>\n<ul>\n<li><code>v-for=&quot;(值变量, 索引变量) in 目标结构&quot;</code></li>\n<li><code>v-for=&quot;值变量 in 目标结构&quot;</code></li>\n</ul>\n</li>\n<li><p>目标结构:</p>\n<ul>\n<li>可以遍历数组 / 对象 / 数字 / 字符串</li>\n</ul>\n</li>\n<li><p>注意:</p>\n<p>v-for的临时变量名不能用到v-for范围外</p>\n<p>同级标签的key值不能重复</p>\n</li>\n</ul>\n<h4 id=\"1-遍历数组\"><a href=\"#1-遍历数组\" class=\"headerlink\" title=\"1:遍历数组\"></a>1:遍历数组</h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div id&#x3D;&quot;app&quot;&gt;\n      &lt;!-- v-for 把一组数据, 渲染成一组DOM --&gt;\n      &lt;!-- 口诀: 让谁循环生成, v-for就写谁身上 --&gt;\n      &lt;p&gt;学生姓名&lt;&#x2F;p&gt;\n      &lt;ul&gt;\n        &lt;li v-for&#x3D;&quot;(item, index) in arr&quot; :key&#x3D;&quot;item&quot;&gt;\n          &#123;&#123; index &#125;&#125; - &#123;&#123; item &#125;&#125;\n        &lt;&#x2F;li&gt;\n      &lt;&#x2F;ul&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data() &#123;\n    return &#123;\n      arr: [&quot;小明&quot;, &quot;小欢欢&quot;, &quot;大黄&quot;]\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-遍历数组内对象\"><a href=\"#2-遍历数组内对象\" class=\"headerlink\" title=\"2:遍历数组内对象\"></a>2:遍历数组内对象</h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div id&#x3D;&quot;app&quot;&gt;\n      &lt;!-- 省略其他 --&gt;\n      &lt;p&gt;学生详细信息&lt;&#x2F;p&gt;\n      &lt;ul&gt;\n        &lt;li v-for&#x3D;&quot;obj in stuArr&quot; :key&#x3D;&quot;obj.id&quot;&gt;\n          &lt;span&gt;&#123;&#123; obj.name &#125;&#125;&lt;&#x2F;span&gt;\n          &lt;span&gt;&#123;&#123; obj.sex &#125;&#125;&lt;&#x2F;span&gt;\n          &lt;span&gt;&#123;&#123; obj.hobby &#125;&#125;&lt;&#x2F;span&gt;\n        &lt;&#x2F;li&gt;\n      &lt;&#x2F;ul&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data() &#123;\n    return &#123;\n      &#x2F;&#x2F; ...省略其他\n      stuArr: [\n        &#123;\n          id: 1001,\n          name: &quot;孙悟空&quot;,\n          sex: &quot;男&quot;,\n          hobby: &quot;吃桃子&quot;,\n        &#125;,\n        &#123;\n          id: 1002,\n          name: &quot;猪八戒&quot;,\n          sex: &quot;男&quot;,\n          hobby: &quot;背媳妇&quot;,\n        &#125;\n      ]\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n","site":{"data":{"styles":"body {\n  background: url(\"/images/background.gif\");\n  background-repeat: repeat;\n  background-attachment: fixed;\n}\n.content-wrap {\n  opacity: 0.9;\n}\n.sidebar {\n  opacity: 0.9;\n}\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n.popup {\n  opacity: 0.9;\n}\n"}},"abbrlink":"WCNCJ8","excerpt":"<h1 id=\"基础配置及指令\"><a href=\"#基础配置及指令\" class=\"headerlink\" title=\"基础配置及指令\"></a>基础配置及指令</h1>","more":"<h2 id=\"1-搭建脚手架\"><a href=\"#1-搭建脚手架\" class=\"headerlink\" title=\"1-搭建脚手架\"></a>1-搭建脚手架</h2><p>(建议全局配置, 开箱即用 0配置)</p>\n<h3 id=\"1-新建文件夹-不能包含中文-cmd开启指令\"><a href=\"#1-新建文件夹-不能包含中文-cmd开启指令\" class=\"headerlink\" title=\"1.新建文件夹(不能包含中文) cmd开启指令\"></a>1.新建文件夹(不能包含中文) cmd开启指令</h3><h3 id=\"2-全局安装\"><a href=\"#2-全局安装\" class=\"headerlink\" title=\"2.全局安装:\"></a>2.全局安装:</h3><pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">yarn global add @vue&#x2F;cli\n# OR\nnpm install -g @vue&#x2F;cli\n\n#如果半天没反应,ctrl c 停止重来<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>查看版本:</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">vue -V\n# 出现版本号则表示安装成功<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"3-创建项目\"><a href=\"#3-创建项目\" class=\"headerlink\" title=\"3.创建项目:\"></a>3.创建项目:</h3><pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\"># vue和create是命令, vuecli-demo是文件夹名\nvue create vuecli-demo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"4-选择模板-选错可以ctrl-C-重来\"><a href=\"#4-选择模板-选错可以ctrl-C-重来\" class=\"headerlink\" title=\"4.选择模板:(选错可以ctrl C 重来)\"></a>4.选择模板:(<code>选错可以ctrl C 重来</code>)</h3><p><img src=\"/2019/11/11/vue%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20211114143420078.png\" alt=\"image-20211114143420078\"></p>\n<h3 id=\"5-选择什么方式下载脚手架依赖包\"><a href=\"#5-选择什么方式下载脚手架依赖包\" class=\"headerlink\" title=\"5.选择什么方式下载脚手架依赖包:\"></a>5.选择什么方式下载脚手架依赖包:</h3><p><img src=\"/2019/11/11/vue%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20211114143428305.png\" alt=\"image-20211114143428305\"></p>\n<h3 id=\"6-回车等待生成项目文件夹-文件-下载必须的第三方包们\"><a href=\"#6-回车等待生成项目文件夹-文件-下载必须的第三方包们\" class=\"headerlink\" title=\"6.回车等待生成项目文件夹+文件+下载必须的第三方包们\"></a>6.回车等待生成项目文件夹+文件+下载必须的第三方包们</h3><p><img src=\"/2019/11/11/vue%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20211114143435985.png\" alt=\"image-20211114143435985\"></p>\n<h3 id=\"7-进入脚手架项目下-启动内置的热更新本地服务器\"><a href=\"#7-进入脚手架项目下-启动内置的热更新本地服务器\" class=\"headerlink\" title=\"7.进入脚手架项目下, 启动内置的热更新本地服务器\"></a>7.进入脚手架项目下, 启动内置的热更新本地服务器</h3><pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">cd vuecil-demo\n\nnpm run serve\n# 或\nyarn serve<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"8-打开浏览器输入上述地址\"><a href=\"#8-打开浏览器输入上述地址\" class=\"headerlink\" title=\"8.打开浏览器输入上述地址:\"></a>8.打开浏览器输入上述地址:</h3><ul>\n<li><p><img src=\"/2019/11/11/vue%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20211114091424285.png\" alt=\"image-20211114091424285\"></p>\n<p>目录分析:</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">vuecil-demo        # 项目目录\n   ├── node_modules # 项目依赖的第三方包\n   ├── public       # 静态文件目录\n     ├── favicon.ico# 浏览器小图标\n     └── index.html # 单页面的html文件(网页浏览的是它)\n   ├── src          # 业务文件夹\n     ├── assets     # 静态资源\n       └── logo.png # vue的logo图片\n     ├── components # 组件目录\n       └── HelloWorld.vue # 欢迎页面vue代码文件 \n     ├── App.vue    # 整个应用的根组件\n     └── main.js    # 入口js文件\n   ├── .gitignore   # git提交忽略配置\n   ├── babel.config.js  # babel配置\n   ├── package.json  # 依赖包列表\n   ├── README.md    # 项目说明\n \t└── yarn.lock    # 项目包版本锁定和缓存地址<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n<p>主要文件及含义:</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">node_modules下都是下载的第三方包\n<span class=\"token keyword\">public</span><span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>html – 浏览器运行的网页\nsrc<span class=\"token operator\">/</span>main<span class=\"token punctuation\">.</span>js – webpack打包的入口文件\nsrc<span class=\"token operator\">/</span>App<span class=\"token punctuation\">.</span>vue – vue项目入口页面\n<span class=\"token keyword\">package</span><span class=\"token punctuation\">.</span>json – 依赖包列表文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<p>==关闭eslint检查:==</p>\n<p>在vue.config.js 里面 添加配置项 重启服务器</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  lintOnSave<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//暂时关闭eslint检查</span>\n  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 自定义服务配置</span>\n    open<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 自动打开浏览器</span>\n    port<span class=\"token operator\">:</span> <span class=\"token number\">3000</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n<h2 id=\"2-vue基础指令\"><a href=\"#2-vue基础指令\" class=\"headerlink\" title=\"2-vue基础指令:\"></a>2-vue基础指令:</h2><p><code>在vue中，通过数据驱动视图，不要在想着怎么操作DOM，而是想着如何操作数据！</code></p>\n<h3 id=\"1-插值表达式\"><a href=\"#1-插值表达式\" class=\"headerlink\" title=\"1) 插值表达式\"></a>1) 插值表达式</h3><p>插值表达式又叫: 声明式渲染/文本插值/大胡子语法</p>\n<p>作用: 在dom标签中, 直接插入内容</p>\n<p>语法: </p>\n<h3 id=\"2-v-bind\"><a href=\"#2-v-bind\" class=\"headerlink\" title=\"2) v-bind\"></a>2) v-bind</h3><p>动态绑定:目标：给标签属性设置Vue变量的值</p>\n<ul>\n<li>语法：<code>v-bind:属性名=&quot;vue变量&quot;</code></li>\n<li>简写：<code>:属性名=&quot;vue变量&quot;</code></li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!-- vue指令-v-bind属性动态赋值 --&gt;\n&lt;a v-bind:href&#x3D;&quot;url&quot;&gt;我是a标签&lt;&#x2F;a&gt;\n&lt;img :src&#x3D;&quot;imgSrc&quot;&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-v-on\"><a href=\"#3-v-on\" class=\"headerlink\" title=\"3) v-on:\"></a>3) v-on:</h3><p>作用:给标签绑定事件</p>\n<h4 id=\"1-v-on语法\"><a href=\"#1-v-on语法\" class=\"headerlink\" title=\"1:v-on语法\"></a>1:v-on语法</h4><p>语法 :</p>\n<ul>\n<li><p><code>v-on:事件名=“methods中的函数名&quot; </code></p>\n</li>\n<li><p><code>v-on:事件名=“methods中的函数名(实参)&quot; </code></p>\n</li>\n</ul>\n<p>简写: </p>\n<ul>\n<li><code>@事件名=&quot;methods中的函数&quot;</code></li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!-- vue指令:   v-on事件绑定--&gt;\n&lt;p&gt;你要买商品的数量: &#123;&#123;count&#125;&#125;&lt;&#x2F;p&gt;\n&lt;button v-on:click&#x3D;&quot;addFn&quot;&gt;增加1个&lt;&#x2F;button&gt;\n&lt;button v-on:click&#x3D;&quot;addCountFn(5)&quot;&gt;一次加5件&lt;&#x2F;button&gt;\n\n&lt;button @click&#x3D;&quot;subFn&quot;&gt;减少&lt;&#x2F;button&gt; &#x2F;&#x2F;v-on:可以简写成@\n\n&lt;script&gt;\n    export default &#123;\n        &#x2F;&#x2F; ...其他省略\n        methods: &#123;\n            addFn()&#123; \n                &#x2F;&#x2F; this代表export default后面的组件对象(下属有data里return出来的属性)\n                this.count++\n            &#125;,\n            addCountFn(num)&#123;\n                this.count +&#x3D; num\n            &#125;,\n            subFn()&#123;\n                this.count--\n            &#125;\n        &#125;\n    &#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-v-on事件对象\"><a href=\"#2-v-on事件对象\" class=\"headerlink\" title=\"2:v-on事件对象\"></a>2:v-on事件对象</h4><p>作用: vue事件处理函数中, 拿到事件对象</p>\n<p>语法:</p>\n<ul>\n<li><code>无传参, 通过形参直接接收</code></li>\n<li><code>传参, 通过$event指代事件对象传给事件处理函数</code></li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;a @click&#x3D;&quot;one&quot; href&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;阻止百度&lt;&#x2F;a&gt;\n    &lt;hr&gt;\n    &lt;a @click&#x3D;&quot;two(10, $event)&quot; href&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;阻止去百度&lt;&#x2F;a&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  methods: &#123;\n    one(e)&#123;\n      e.preventDefault()\n    &#125;,\n    two(num, e)&#123;\n      e.preventDefault()\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"3-v-on修饰符\"><a href=\"#3-v-on修饰符\" class=\"headerlink\" title=\"3:v-on修饰符\"></a>3:v-on修饰符</h4><p>作用: 事件.修饰符名 - 给事件带来更强大的功能</p>\n<p>语法:</p>\n<ul>\n<li><code>@事件名.修饰符=&quot;methods里函数&quot; </code></li>\n</ul>\n<p> 修饰符列表 </p>\n<ul>\n<li><p><code>.stop - 阻止事件冒泡 </code></p>\n</li>\n<li><p><code>.prevent - 阻止默认行为</code></p>\n</li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!-- vue对事件进行了修饰符设置, 在事件后面.修饰符名即可使用更多的功能 --&gt;\n   &lt;button @click.stop&#x3D;&quot;btn&quot;&gt;.stop阻止事件冒泡&lt;&#x2F;button&gt;\n   &lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot; @click.prevent&#x3D;&quot;btn&quot;&gt;.prevent阻止默认行为&lt;&#x2F;a&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"4-v-on案件修饰符\"><a href=\"#4-v-on案件修饰符\" class=\"headerlink\" title=\"4:v-on案件修饰符\"></a>4:v-on案件修饰符</h4><p>作用:给键盘事件, 添加修饰符, 增强能力</p>\n<p>语法: </p>\n<ul>\n<li><code>@keyup.enter - 监测回车按键 </code></li>\n<li><code>@keyup.esc - 监测返回按键</code></li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;input type&#x3D;&quot;text&quot; @keydown.enter&#x3D;&quot;enterFn&quot;&gt;  &#x2F;&#x2F;回车键触发\n&lt;input type&#x3D;&quot;text&quot; @keydown.esc&#x3D;&quot;escFn&quot;&gt;  &#x2F;&#x2F;返回键触发<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-v-model\"><a href=\"#4-v-model\" class=\"headerlink\" title=\"4) v-model:\"></a>4) v-model:</h3><p>作用: 把表单值和Vue变量双向绑定</p>\n<p>基础阶段v-model只能用在表单元素上, 以后学组件后讲v-model高级用法</p>\n<p>语法: <code>v-model=&quot;vue数据变量&quot;</code></p>\n<p>双向数据绑定 :</p>\n<ul>\n<li>变量变化 -&gt; 视图自动同步</li>\n<li>视图变化 -&gt; 变量自动同步</li>\n</ul>\n<h4 id=\"1-绑定input\"><a href=\"#1-绑定input\" class=\"headerlink\" title=\"1:绑定input\"></a>1:绑定input</h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;!--    v-model:是实现vuejs变量和表单标签value属性, 双向绑定的指令 --&gt;\n    &lt;div&gt;\n      &lt;span&gt;用户名:&lt;&#x2F;span&gt;\n      &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;username&quot; &#x2F;&gt;\n    &lt;&#x2F;div&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-绑定其他表单标签\"><a href=\"#2-绑定其他表单标签\" class=\"headerlink\" title=\"2:绑定其他表单标签\"></a>2:绑定其他表单标签</h4><p>v-model绑定:select, checkbox, radio,  textarea:</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;div&gt;\n      &lt;span&gt;来自于: &lt;&#x2F;span&gt;\n      &lt;!-- 下拉菜单要绑定在select上 --&gt;\n      &lt;select v-model&#x3D;&quot;from&quot;&gt;\n        &lt;option value&#x3D;&quot;北京市&quot;&gt;北京&lt;&#x2F;option&gt;\n        &lt;option value&#x3D;&quot;南京市&quot;&gt;南京&lt;&#x2F;option&gt;\n        &lt;option value&#x3D;&quot;天津市&quot;&gt;天津&lt;&#x2F;option&gt;\n      &lt;&#x2F;select&gt;\n      &lt;!-- (重要)\n      遇到复选框, v-model的变量值\n      非数组 - 关联的是复选框的checked属性\n      数组   - 关联的是复选框的value属性 --&gt;\n      &lt;span&gt;爱好: &lt;&#x2F;span&gt;\n      &lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;hobby&quot; value&#x3D;&quot;抽烟&quot;&gt;抽烟\n      &lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;hobby&quot; value&#x3D;&quot;喝酒&quot;&gt;喝酒\n      &lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;hobby&quot; value&#x3D;&quot;写代码&quot;&gt;写代码\n    &lt;&#x2F;div&gt;\n    &lt;div&gt;\n      &lt;span&gt;性别: &lt;&#x2F;span&gt;\n      &lt;input type&#x3D;&quot;radio&quot; value&#x3D;&quot;男&quot; name&#x3D;&quot;sex&quot; v-model&#x3D;&quot;gender&quot;&gt;男\n      &lt;input type&#x3D;&quot;radio&quot; value&#x3D;&quot;女&quot; name&#x3D;&quot;sex&quot; v-model&#x3D;&quot;gender&quot;&gt;女\n    &lt;&#x2F;div&gt;\n    &lt;div&gt;\n      &lt;span&gt;自我介绍&lt;&#x2F;span&gt;\n      &lt;textarea v-model&#x3D;&quot;intro&quot;&gt;&lt;&#x2F;textarea&gt;\n    &lt;&#x2F;div&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data() &#123;\n    return &#123;\n      from: &quot;&quot;,\n      hobby: [], \n      sex: &quot;&quot;,\n      intro: &quot;&quot;,\n    &#125;;\n    &#x2F;&#x2F; 总结:\n    &#x2F;&#x2F; 特别注意: v-model, 在input[checkbox]的多选框状态\n    &#x2F;&#x2F; 变量为非数组, 则绑定的是checked的属性(true&#x2F;false) - 常用于: 单个绑定使用\n    &#x2F;&#x2F; 变量为数组, 则绑定的是他们的value属性里的值 - 常用于: 收集勾选了哪些值\n  &#125;\n&#125;;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"3-v-model修饰符\"><a href=\"#3-v-model修饰符\" class=\"headerlink\" title=\"3:v-model修饰符\"></a>3:v-model修饰符</h4><p>作用:给v-model扩展额外功能</p>\n<p>语法:</p>\n<p><code>v-model.修饰符=&quot;vue数据变量&quot;</code></p>\n<ul>\n<li>.number   以parseFloat转成数字类型</li>\n<li>.trim          去除首尾空白字符</li>\n<li>.lazy           在change时触发而非inupt时</li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;div&gt;\n      &lt;span&gt;年龄:&lt;&#x2F;span&gt;\n      &lt;input type&#x3D;&quot;text&quot; v-model.number&#x3D;&quot;age&quot;&gt;\n    &lt;&#x2F;div&gt;\n    &lt;div&gt;\n      &lt;span&gt;人生格言:&lt;&#x2F;span&gt;\n      &lt;input type&#x3D;&quot;text&quot; v-model.trim&#x3D;&quot;motto&quot;&gt;\n    &lt;&#x2F;div&gt;\n    &lt;div&gt;\n      &lt;span&gt;自我介绍:&lt;&#x2F;span&gt;\n      &lt;textarea v-model.lazy&#x3D;&quot;intro&quot;&gt;&lt;&#x2F;textarea&gt;\n    &lt;&#x2F;div&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data() &#123;\n    return &#123;\n      age: &quot;&quot;,\n      motto: &quot;&quot;,\n      intro: &quot;&quot;\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"5-v-html\"><a href=\"#5-v-html\" class=\"headerlink\" title=\"5) v-html\"></a>5) v-html</h3><p>作用:设置标签显示的内容</p>\n<ul>\n<li>语法:<ul>\n<li><code>v-html=&quot;vue数据变量&quot;</code></li>\n</ul>\n</li>\n<li>注意: 会覆盖插值表达式</li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;p v-html&#x3D;&quot;str&quot;&gt;&lt;&#x2F;p&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data() &#123;\n    return &#123;\n      str: &quot;&lt;span&gt;我是一个span标签&lt;&#x2F;span&gt;&quot;\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>==v-html与插值表达式区别是什么？==</p>\n<ul>\n<li>插值表达式把值当成普通字符串显示</li>\n<li>v-html把值当成标签进行解析显示</li>\n</ul>\n<h3 id=\"6-v-for-和-v-if\"><a href=\"#6-v-for-和-v-if\" class=\"headerlink\" title=\"6) v-for 和 v-if\"></a>6) v-for 和 v-if</h3><p>作用:控制标签显示与隐藏</p>\n<ul>\n<li>语法:<ul>\n<li><code>v-show=&quot;vue变量&quot;     </code>       </li>\n<li><code>v-if=&quot;vue变量&quot; </code></li>\n</ul>\n</li>\n<li>原理(区别)<ul>\n<li>v-show 用的display:none隐藏   (频繁切换使用)</li>\n<li>v-if  直接从DOM树上移除</li>\n</ul>\n</li>\n<li>高级<ul>\n<li>v-else使用</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1 v-show&#x3D;&quot;isOk&quot;&gt;v-show的盒子&lt;&#x2F;h1&gt;\n    &lt;h1 v-if&#x3D;&quot;isOk&quot;&gt;v-if的盒子&lt;&#x2F;h1&gt;\n\n    &lt;div&gt;\n      &lt;p v-if&#x3D;&quot;age &gt; 18&quot;&gt;我成年了&lt;&#x2F;p&gt;\n      &lt;p v-else&gt;还得多吃饭&lt;&#x2F;p&gt;\n    &lt;&#x2F;div&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data() &#123;\n    return &#123;\n      isOk: true,\n      age: 15\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-v-for\"><a href=\"#7-v-for\" class=\"headerlink\" title=\"7) v-for:\"></a>7) v-for:</h3><p>作用:循环遍历数据生成标签:</p>\n<ul>\n<li><p>语法</p>\n<ul>\n<li><code>v-for=&quot;(值变量, 索引变量) in 目标结构&quot;</code></li>\n<li><code>v-for=&quot;值变量 in 目标结构&quot;</code></li>\n</ul>\n</li>\n<li><p>目标结构:</p>\n<ul>\n<li>可以遍历数组 / 对象 / 数字 / 字符串</li>\n</ul>\n</li>\n<li><p>注意:</p>\n<p>v-for的临时变量名不能用到v-for范围外</p>\n<p>同级标签的key值不能重复</p>\n</li>\n</ul>\n<h4 id=\"1-遍历数组\"><a href=\"#1-遍历数组\" class=\"headerlink\" title=\"1:遍历数组\"></a>1:遍历数组</h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div id&#x3D;&quot;app&quot;&gt;\n      &lt;!-- v-for 把一组数据, 渲染成一组DOM --&gt;\n      &lt;!-- 口诀: 让谁循环生成, v-for就写谁身上 --&gt;\n      &lt;p&gt;学生姓名&lt;&#x2F;p&gt;\n      &lt;ul&gt;\n        &lt;li v-for&#x3D;&quot;(item, index) in arr&quot; :key&#x3D;&quot;item&quot;&gt;\n          &#123;&#123; index &#125;&#125; - &#123;&#123; item &#125;&#125;\n        &lt;&#x2F;li&gt;\n      &lt;&#x2F;ul&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data() &#123;\n    return &#123;\n      arr: [&quot;小明&quot;, &quot;小欢欢&quot;, &quot;大黄&quot;]\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-遍历数组内对象\"><a href=\"#2-遍历数组内对象\" class=\"headerlink\" title=\"2:遍历数组内对象\"></a>2:遍历数组内对象</h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div id&#x3D;&quot;app&quot;&gt;\n      &lt;!-- 省略其他 --&gt;\n      &lt;p&gt;学生详细信息&lt;&#x2F;p&gt;\n      &lt;ul&gt;\n        &lt;li v-for&#x3D;&quot;obj in stuArr&quot; :key&#x3D;&quot;obj.id&quot;&gt;\n          &lt;span&gt;&#123;&#123; obj.name &#125;&#125;&lt;&#x2F;span&gt;\n          &lt;span&gt;&#123;&#123; obj.sex &#125;&#125;&lt;&#x2F;span&gt;\n          &lt;span&gt;&#123;&#123; obj.hobby &#125;&#125;&lt;&#x2F;span&gt;\n        &lt;&#x2F;li&gt;\n      &lt;&#x2F;ul&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data() &#123;\n    return &#123;\n      &#x2F;&#x2F; ...省略其他\n      stuArr: [\n        &#123;\n          id: 1001,\n          name: &quot;孙悟空&quot;,\n          sex: &quot;男&quot;,\n          hobby: &quot;吃桃子&quot;,\n        &#125;,\n        &#123;\n          id: 1002,\n          name: &quot;猪八戒&quot;,\n          sex: &quot;男&quot;,\n          hobby: &quot;背媳妇&quot;,\n        &#125;\n      ]\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"vue基础属性","date":"2019-11-15T03:35:50.000Z","_content":"\n\n\n\n\n# vue基础属性\n\n<!--more-->\n\n\n\n## 1-虚拟DOM\n\n概念:\n\n.vue文件中的template里写的标签, 都是模板, 都要被vue处理成虚拟DOM对象, 在生成真实DOM片段, 才会渲染显示到真实DOM页面上\n\n1. 内存中生成一样的虚拟DOM结构(==本质是个JS对象==)\n\n   因为真实的DOM属性好几百个, 没办法快速的知道哪个属性改变了\n\n   比如template里标签结构\n\n   ```vue\n   <template>\n       <div id=\"box\">\n           <p class=\"my_p\">123</p>\n       </div>\n   </template>\n   ```\n\n   对应的虚拟DOM结构\n\n   ```js\n   const dom = {\n       type: 'div',\n       attributes: [{id: 'box'}],\n       children: {\n           type: 'p',\n           attributes: [{class: 'my_p'}],\n           text: '123'\n       }\n   }\n   ```\n\n   1. 以后vue数据更新\n\n      - 生成新的虚拟DOM结构\n      - 和旧的虚拟DOM结构对比\n      - 找不不同, 只更新变化的部分(重绘/回流)到页面 - 也叫打补丁\n\n   ==好处1: 提高了更新DOM的性能(不用把页面全删除重新渲染)==\n\n   ==好处2: 虚拟DOM只包含必要的属性(没有真实DOM上百个属性)==\n\n\n\n## 2-key的作用:\n\n### 目标\n\n无key, 就地更新\n\n有key为索引, 就地更新\n\n有key为id, 对比新旧DOM, 无则创建/删除\n\n### 1,无key - 就地更新\n\nv-for不会移动DOM, 而是尝试复用, 就地更新，如果需要v-for移动DOM, 你需要用特殊 attribute `key` 来提供一个排序提示\n\n```vue\n<ul id=\"myUL\">\n    <li v-for=\"str in arr\">\n        {{ str }} \n        <input type=\"text\">\n    </li>\n</ul>\n<button @click=\"addFn\">下标为1的位置新增一个</button>\n```\n\n```js\nexport default {\n    data(){\n        return {\n            arr: [\"老大\", \"新来的\", \"老二\", \"老三\"]\n        }\n    },\n    methods: {\n        addFn(){\n            this.arr.splice(1, 0, '新来的')\n        }\n    }\n};\n```\n\n旧 - DOM结构  和  新 - DOM结构 对比过程\n\n![image-20211115152931976](vue基础属性/image-20211115152931976.png)\n\n### 2,有key - 值为索引 - 就地更新\n\n - 还是就地更新\n\n因为新旧虚拟DOM对比, key存在就复用此标签更新内容, 如果不存在就直接建立一个新的\n\n```vue\n<ul id=\"myUL\">\n    <li v-for=\"(str, index) in arr\" :key=\"index\">\n        {{ str }} \n        <input type=\"text\">\n    </li>\n</ul>\n<button @click=\"addFn\">下标为1的位置新增一个</button>\n```\n\n```js\nexport default {\n    data(){\n        return {\n            arr: [\"老大\", \"新来的\", \"老二\", \"老三\"]\n        }\n    },\n    methods: {\n        addFn(){\n            this.arr.splice(1, 0, '新来的')\n        }\n    }\n};\n```\n\n图解:\n\n![image-20211115153036413](vue基础属性/image-20211115153036413.png)\n\n1. v-for先循环产生新的DOM结构, key是连续的, 和数据对应\n\n2. 然后比较新旧DOM结构, 找到区别, 打补丁到页面上\n\n   最后补一个li, 然后从第二个往后, 都要更新内容\n\n   ==口诀: key的值有id用id, 没id用索引==\n\n### 3,有key - 值为id - 性能最高\n\nkey的值只能是唯一不重复的, 字符串或数值\n\nv-for不会移动DOM, 而是尝试复用, 就地更新，如果需要v-for移动DOM, 你需要用特殊 attribute `key` 来提供一个排序提示\n\n新DOM里数据的key存在, 去旧的虚拟DOM结构里找到key标记的标签, 复用标签\n\n新DOM里数据的key存在, 去旧的虚拟DOM结构里没有找到key标签的标签, 创建\n\n旧DOM结构的key, 在新的DOM结构里没有了, 则==移除key所在的标签==\n\n```js\n<template>\n  <div>\n    <ul>\n      <li v-for=\"obj in arr\" :key=\"obj.id\">\n        {{ obj.name }}\n        <input type=\"text\">\n      </li>\n    </ul>\n    <button @click=\"btn\">下标1位置插入新来的</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      arr: [\n        {\n          name: '老大',\n          id: 50\n        },\n        {\n          name: '老二',\n          id: 31\n        },\n        {\n          name: '老三',\n          id: 10\n        }\n      ],\n    };\n  },\n  methods: {\n    btn(){\n      this.arr.splice(1, 0, {\n        id: 19, \n        name: '新来的'\n      })\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n```\n\n图解:![image-20211115153220820](vue基础属性/image-20211115153220820.png)\n\n`总结: 不用key也不影响功能(就地更新), 添加key可以提高更新的性能`\n\n\n\n## 3-Vue计算属性-computed\n\n总结:`一个数据, 依赖另外一些数据计算而来的结果`\n\n语法:\n\n```js\n  computed: {\n      \"计算属性名\" () {\n          return \"值\"\n      }\n  }\n```\n\n案例:需求: 求2个数的和显示到页面上\n\n```vue\n<template>\n  <div>\n    <p>{{ num }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data(){\n    return {\n      a: 10,\n      b: 20\n    }\n  },\n  // 计算属性:\n  // 场景: 一个变量的值, 需要用另外变量计算而得来\n  /*\n    语法:\n    computed: {\n      计算属性名 () {\n        return 值\n      }\n    }\n  */\n // 注意: 计算属性和data属性都是变量-不能重名\n // 注意2: 函数内变量变化, 会自动重新计算结果返回\n  computed: {\n    num(){\n      return this.a + this.b\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n```\n\n## 4-vue监听器:\n\n==想要侦听一个属性变化, 可使用侦听属性watch==\n\n作用:`可以侦听data/computed属性值改变`\n\n语法:\n\n```js\nwatch: {\n    \"被侦听的属性名\" (newVal, oldVal){\n        \n    }\n}\n```\n\n完整例子:\n\n```vue\n<template>\n  <div>\n    <input type=\"text\" v-model=\"name\">\n  </div>\n</template>\n\n<script>\nexport default {\n  data(){\n    return {\n      name: \"\"\n    }\n  },\n  // 目标: 侦听到name值的改变\n  /*\n  语法:\n    watch: {\n      变量名 (newVal, oldVal){\n        // 变量名对应值改变这里自动触发\n      }\n    }\n  */\n  watch: {\n    // newVal: 当前最新值\n    // oldVal: 上一刻值\n    name(newVal, oldVal){\n      console.log(newVal, oldVal);\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n```\n\n","source":"_posts/vue基础属性.md","raw":"---\ntitle: vue基础属性\ndate: 2019-11-15 11:35:50\ntags:\n- 前端\n- vue\ncategories: \n   - vue\n---\n\n\n\n\n\n# vue基础属性\n\n<!--more-->\n\n\n\n## 1-虚拟DOM\n\n概念:\n\n.vue文件中的template里写的标签, 都是模板, 都要被vue处理成虚拟DOM对象, 在生成真实DOM片段, 才会渲染显示到真实DOM页面上\n\n1. 内存中生成一样的虚拟DOM结构(==本质是个JS对象==)\n\n   因为真实的DOM属性好几百个, 没办法快速的知道哪个属性改变了\n\n   比如template里标签结构\n\n   ```vue\n   <template>\n       <div id=\"box\">\n           <p class=\"my_p\">123</p>\n       </div>\n   </template>\n   ```\n\n   对应的虚拟DOM结构\n\n   ```js\n   const dom = {\n       type: 'div',\n       attributes: [{id: 'box'}],\n       children: {\n           type: 'p',\n           attributes: [{class: 'my_p'}],\n           text: '123'\n       }\n   }\n   ```\n\n   1. 以后vue数据更新\n\n      - 生成新的虚拟DOM结构\n      - 和旧的虚拟DOM结构对比\n      - 找不不同, 只更新变化的部分(重绘/回流)到页面 - 也叫打补丁\n\n   ==好处1: 提高了更新DOM的性能(不用把页面全删除重新渲染)==\n\n   ==好处2: 虚拟DOM只包含必要的属性(没有真实DOM上百个属性)==\n\n\n\n## 2-key的作用:\n\n### 目标\n\n无key, 就地更新\n\n有key为索引, 就地更新\n\n有key为id, 对比新旧DOM, 无则创建/删除\n\n### 1,无key - 就地更新\n\nv-for不会移动DOM, 而是尝试复用, 就地更新，如果需要v-for移动DOM, 你需要用特殊 attribute `key` 来提供一个排序提示\n\n```vue\n<ul id=\"myUL\">\n    <li v-for=\"str in arr\">\n        {{ str }} \n        <input type=\"text\">\n    </li>\n</ul>\n<button @click=\"addFn\">下标为1的位置新增一个</button>\n```\n\n```js\nexport default {\n    data(){\n        return {\n            arr: [\"老大\", \"新来的\", \"老二\", \"老三\"]\n        }\n    },\n    methods: {\n        addFn(){\n            this.arr.splice(1, 0, '新来的')\n        }\n    }\n};\n```\n\n旧 - DOM结构  和  新 - DOM结构 对比过程\n\n![image-20211115152931976](vue基础属性/image-20211115152931976.png)\n\n### 2,有key - 值为索引 - 就地更新\n\n - 还是就地更新\n\n因为新旧虚拟DOM对比, key存在就复用此标签更新内容, 如果不存在就直接建立一个新的\n\n```vue\n<ul id=\"myUL\">\n    <li v-for=\"(str, index) in arr\" :key=\"index\">\n        {{ str }} \n        <input type=\"text\">\n    </li>\n</ul>\n<button @click=\"addFn\">下标为1的位置新增一个</button>\n```\n\n```js\nexport default {\n    data(){\n        return {\n            arr: [\"老大\", \"新来的\", \"老二\", \"老三\"]\n        }\n    },\n    methods: {\n        addFn(){\n            this.arr.splice(1, 0, '新来的')\n        }\n    }\n};\n```\n\n图解:\n\n![image-20211115153036413](vue基础属性/image-20211115153036413.png)\n\n1. v-for先循环产生新的DOM结构, key是连续的, 和数据对应\n\n2. 然后比较新旧DOM结构, 找到区别, 打补丁到页面上\n\n   最后补一个li, 然后从第二个往后, 都要更新内容\n\n   ==口诀: key的值有id用id, 没id用索引==\n\n### 3,有key - 值为id - 性能最高\n\nkey的值只能是唯一不重复的, 字符串或数值\n\nv-for不会移动DOM, 而是尝试复用, 就地更新，如果需要v-for移动DOM, 你需要用特殊 attribute `key` 来提供一个排序提示\n\n新DOM里数据的key存在, 去旧的虚拟DOM结构里找到key标记的标签, 复用标签\n\n新DOM里数据的key存在, 去旧的虚拟DOM结构里没有找到key标签的标签, 创建\n\n旧DOM结构的key, 在新的DOM结构里没有了, 则==移除key所在的标签==\n\n```js\n<template>\n  <div>\n    <ul>\n      <li v-for=\"obj in arr\" :key=\"obj.id\">\n        {{ obj.name }}\n        <input type=\"text\">\n      </li>\n    </ul>\n    <button @click=\"btn\">下标1位置插入新来的</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      arr: [\n        {\n          name: '老大',\n          id: 50\n        },\n        {\n          name: '老二',\n          id: 31\n        },\n        {\n          name: '老三',\n          id: 10\n        }\n      ],\n    };\n  },\n  methods: {\n    btn(){\n      this.arr.splice(1, 0, {\n        id: 19, \n        name: '新来的'\n      })\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n```\n\n图解:![image-20211115153220820](vue基础属性/image-20211115153220820.png)\n\n`总结: 不用key也不影响功能(就地更新), 添加key可以提高更新的性能`\n\n\n\n## 3-Vue计算属性-computed\n\n总结:`一个数据, 依赖另外一些数据计算而来的结果`\n\n语法:\n\n```js\n  computed: {\n      \"计算属性名\" () {\n          return \"值\"\n      }\n  }\n```\n\n案例:需求: 求2个数的和显示到页面上\n\n```vue\n<template>\n  <div>\n    <p>{{ num }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data(){\n    return {\n      a: 10,\n      b: 20\n    }\n  },\n  // 计算属性:\n  // 场景: 一个变量的值, 需要用另外变量计算而得来\n  /*\n    语法:\n    computed: {\n      计算属性名 () {\n        return 值\n      }\n    }\n  */\n // 注意: 计算属性和data属性都是变量-不能重名\n // 注意2: 函数内变量变化, 会自动重新计算结果返回\n  computed: {\n    num(){\n      return this.a + this.b\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n```\n\n## 4-vue监听器:\n\n==想要侦听一个属性变化, 可使用侦听属性watch==\n\n作用:`可以侦听data/computed属性值改变`\n\n语法:\n\n```js\nwatch: {\n    \"被侦听的属性名\" (newVal, oldVal){\n        \n    }\n}\n```\n\n完整例子:\n\n```vue\n<template>\n  <div>\n    <input type=\"text\" v-model=\"name\">\n  </div>\n</template>\n\n<script>\nexport default {\n  data(){\n    return {\n      name: \"\"\n    }\n  },\n  // 目标: 侦听到name值的改变\n  /*\n  语法:\n    watch: {\n      变量名 (newVal, oldVal){\n        // 变量名对应值改变这里自动触发\n      }\n    }\n  */\n  watch: {\n    // newVal: 当前最新值\n    // oldVal: 上一刻值\n    name(newVal, oldVal){\n      console.log(newVal, oldVal);\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n```\n\n","slug":"vue基础属性","published":1,"updated":"2021-11-17T11:41:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckw4zukoy0003a0tydiacfj2b","content":"<h1 id=\"vue基础属性\"><a href=\"#vue基础属性\" class=\"headerlink\" title=\"vue基础属性\"></a>vue基础属性</h1><span id=\"more\"></span>\n\n\n\n<h2 id=\"1-虚拟DOM\"><a href=\"#1-虚拟DOM\" class=\"headerlink\" title=\"1-虚拟DOM\"></a>1-虚拟DOM</h2><p>概念:</p>\n<p>.vue文件中的template里写的标签, 都是模板, 都要被vue处理成虚拟DOM对象, 在生成真实DOM片段, 才会渲染显示到真实DOM页面上</p>\n<ol>\n<li><p>内存中生成一样的虚拟DOM结构(==本质是个JS对象==)</p>\n<p>因为真实的DOM属性好几百个, 没办法快速的知道哪个属性改变了</p>\n<p>比如template里标签结构</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n    &lt;div id&#x3D;&quot;box&quot;&gt;\n        &lt;p class&#x3D;&quot;my_p&quot;&gt;123&lt;&#x2F;p&gt;\n    &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>对应的虚拟DOM结构</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> dom <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n    attributes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>id<span class=\"token operator\">:</span> <span class=\"token string\">'box'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    children<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span>\n        attributes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">class</span><span class=\"token operator\">:</span> <span class=\"token string\">'my_p'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        text<span class=\"token operator\">:</span> <span class=\"token string\">'123'</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li><p>以后vue数据更新</p>\n<ul>\n<li>生成新的虚拟DOM结构</li>\n<li>和旧的虚拟DOM结构对比</li>\n<li>找不不同, 只更新变化的部分(重绘/回流)到页面 - 也叫打补丁</li>\n</ul>\n</li>\n</ol>\n<p>==好处1: 提高了更新DOM的性能(不用把页面全删除重新渲染)==</p>\n<p>==好处2: 虚拟DOM只包含必要的属性(没有真实DOM上百个属性)==</p>\n</li>\n</ol>\n<h2 id=\"2-key的作用\"><a href=\"#2-key的作用\" class=\"headerlink\" title=\"2-key的作用:\"></a>2-key的作用:</h2><h3 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h3><p>无key, 就地更新</p>\n<p>有key为索引, 就地更新</p>\n<p>有key为id, 对比新旧DOM, 无则创建/删除</p>\n<h3 id=\"1-无key-就地更新\"><a href=\"#1-无key-就地更新\" class=\"headerlink\" title=\"1,无key - 就地更新\"></a>1,无key - 就地更新</h3><p>v-for不会移动DOM, 而是尝试复用, 就地更新，如果需要v-for移动DOM, 你需要用特殊 attribute <code>key</code> 来提供一个排序提示</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;ul id&#x3D;&quot;myUL&quot;&gt;\n    &lt;li v-for&#x3D;&quot;str in arr&quot;&gt;\n        &#123;&#123; str &#125;&#125; \n        &lt;input type&#x3D;&quot;text&quot;&gt;\n    &lt;&#x2F;li&gt;\n&lt;&#x2F;ul&gt;\n&lt;button @click&#x3D;&quot;addFn&quot;&gt;下标为1的位置新增一个&lt;&#x2F;button&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n            arr<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"老大\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"新来的\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"老二\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"老三\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">addFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'新来的'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>旧 - DOM结构  和  新 - DOM结构 对比过程</p>\n<p><img src=\"/2019/11/15/vue%E5%9F%BA%E7%A1%80%E5%B1%9E%E6%80%A7/image-20211115152931976.png\" alt=\"image-20211115152931976\"></p>\n<h3 id=\"2-有key-值为索引-就地更新\"><a href=\"#2-有key-值为索引-就地更新\" class=\"headerlink\" title=\"2,有key - 值为索引 - 就地更新\"></a>2,有key - 值为索引 - 就地更新</h3><ul>\n<li>还是就地更新</li>\n</ul>\n<p>因为新旧虚拟DOM对比, key存在就复用此标签更新内容, 如果不存在就直接建立一个新的</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;ul id&#x3D;&quot;myUL&quot;&gt;\n    &lt;li v-for&#x3D;&quot;(str, index) in arr&quot; :key&#x3D;&quot;index&quot;&gt;\n        &#123;&#123; str &#125;&#125; \n        &lt;input type&#x3D;&quot;text&quot;&gt;\n    &lt;&#x2F;li&gt;\n&lt;&#x2F;ul&gt;\n&lt;button @click&#x3D;&quot;addFn&quot;&gt;下标为1的位置新增一个&lt;&#x2F;button&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n            arr<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"老大\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"新来的\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"老二\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"老三\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">addFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'新来的'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>图解:</p>\n<p><img src=\"/2019/11/15/vue%E5%9F%BA%E7%A1%80%E5%B1%9E%E6%80%A7/image-20211115153036413.png\" alt=\"image-20211115153036413\"></p>\n<ol>\n<li><p>v-for先循环产生新的DOM结构, key是连续的, 和数据对应</p>\n</li>\n<li><p>然后比较新旧DOM结构, 找到区别, 打补丁到页面上</p>\n<p>最后补一个li, 然后从第二个往后, 都要更新内容</p>\n<p>==口诀: key的值有id用id, 没id用索引==</p>\n</li>\n</ol>\n<h3 id=\"3-有key-值为id-性能最高\"><a href=\"#3-有key-值为id-性能最高\" class=\"headerlink\" title=\"3,有key - 值为id - 性能最高\"></a>3,有key - 值为id - 性能最高</h3><p>key的值只能是唯一不重复的, 字符串或数值</p>\n<p>v-for不会移动DOM, 而是尝试复用, 就地更新，如果需要v-for移动DOM, 你需要用特殊 attribute <code>key</code> 来提供一个排序提示</p>\n<p>新DOM里数据的key存在, 去旧的虚拟DOM结构里找到key标记的标签, 复用标签</p>\n<p>新DOM里数据的key存在, 去旧的虚拟DOM结构里没有找到key标签的标签, 创建</p>\n<p>旧DOM结构的key, 在新的DOM结构里没有了, 则==移除key所在的标签==</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>li v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"obj in arr\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"obj.id\"</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> obj<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"btn\"</span><span class=\"token operator\">></span>下标<span class=\"token number\">1</span>位置插入新来的<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n      arr<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n          name<span class=\"token operator\">:</span> <span class=\"token string\">'老大'</span><span class=\"token punctuation\">,</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">50</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          name<span class=\"token operator\">:</span> <span class=\"token string\">'老二'</span><span class=\"token punctuation\">,</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">31</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          name<span class=\"token operator\">:</span> <span class=\"token string\">'老三'</span><span class=\"token punctuation\">,</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">btn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n        id<span class=\"token operator\">:</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> \n        name<span class=\"token operator\">:</span> <span class=\"token string\">'新来的'</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>图解:<img src=\"/2019/11/15/vue%E5%9F%BA%E7%A1%80%E5%B1%9E%E6%80%A7/image-20211115153220820.png\" alt=\"image-20211115153220820\"></p>\n<p><code>总结: 不用key也不影响功能(就地更新), 添加key可以提高更新的性能</code></p>\n<h2 id=\"3-Vue计算属性-computed\"><a href=\"#3-Vue计算属性-computed\" class=\"headerlink\" title=\"3-Vue计算属性-computed\"></a>3-Vue计算属性-computed</h2><p>总结:<code>一个数据, 依赖另外一些数据计算而来的结果</code></p>\n<p>语法:</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"计算属性名\"</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"值\"</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>案例:需求: 求2个数的和显示到页面上</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;p&gt;&#123;&#123; num &#125;&#125;&lt;&#x2F;p&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data()&#123;\n    return &#123;\n      a: 10,\n      b: 20\n    &#125;\n  &#125;,\n  &#x2F;&#x2F; 计算属性:\n  &#x2F;&#x2F; 场景: 一个变量的值, 需要用另外变量计算而得来\n  &#x2F;*\n    语法:\n    computed: &#123;\n      计算属性名 () &#123;\n        return 值\n      &#125;\n    &#125;\n  *&#x2F;\n &#x2F;&#x2F; 注意: 计算属性和data属性都是变量-不能重名\n &#x2F;&#x2F; 注意2: 函数内变量变化, 会自动重新计算结果返回\n  computed: &#123;\n    num()&#123;\n      return this.a + this.b\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;\n\n&lt;style&gt;\n\n&lt;&#x2F;style&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-vue监听器\"><a href=\"#4-vue监听器\" class=\"headerlink\" title=\"4-vue监听器:\"></a>4-vue监听器:</h2><p>==想要侦听一个属性变化, 可使用侦听属性watch==</p>\n<p>作用:<code>可以侦听data/computed属性值改变</code></p>\n<p>语法:</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"被侦听的属性名\"</span> <span class=\"token punctuation\">(</span>newVal<span class=\"token punctuation\">,</span> oldVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        \n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>完整例子:</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;name&quot;&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data()&#123;\n    return &#123;\n      name: &quot;&quot;\n    &#125;\n  &#125;,\n  &#x2F;&#x2F; 目标: 侦听到name值的改变\n  &#x2F;*\n  语法:\n    watch: &#123;\n      变量名 (newVal, oldVal)&#123;\n        &#x2F;&#x2F; 变量名对应值改变这里自动触发\n      &#125;\n    &#125;\n  *&#x2F;\n  watch: &#123;\n    &#x2F;&#x2F; newVal: 当前最新值\n    &#x2F;&#x2F; oldVal: 上一刻值\n    name(newVal, oldVal)&#123;\n      console.log(newVal, oldVal);\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;\n\n&lt;style&gt;\n\n&lt;&#x2F;style&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","site":{"data":{"styles":"body {\n  background: url(\"/images/background.gif\");\n  background-repeat: repeat;\n  background-attachment: fixed;\n}\n.content-wrap {\n  opacity: 0.9;\n}\n.sidebar {\n  opacity: 0.9;\n}\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n.popup {\n  opacity: 0.9;\n}\n"}},"abbrlink":"3AJ23CM","excerpt":"<h1 id=\"vue基础属性\"><a href=\"#vue基础属性\" class=\"headerlink\" title=\"vue基础属性\"></a>vue基础属性</h1>","more":"<h2 id=\"1-虚拟DOM\"><a href=\"#1-虚拟DOM\" class=\"headerlink\" title=\"1-虚拟DOM\"></a>1-虚拟DOM</h2><p>概念:</p>\n<p>.vue文件中的template里写的标签, 都是模板, 都要被vue处理成虚拟DOM对象, 在生成真实DOM片段, 才会渲染显示到真实DOM页面上</p>\n<ol>\n<li><p>内存中生成一样的虚拟DOM结构(==本质是个JS对象==)</p>\n<p>因为真实的DOM属性好几百个, 没办法快速的知道哪个属性改变了</p>\n<p>比如template里标签结构</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n    &lt;div id&#x3D;&quot;box&quot;&gt;\n        &lt;p class&#x3D;&quot;my_p&quot;&gt;123&lt;&#x2F;p&gt;\n    &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>对应的虚拟DOM结构</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> dom <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n    attributes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>id<span class=\"token operator\">:</span> <span class=\"token string\">'box'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    children<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span>\n        attributes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">class</span><span class=\"token operator\">:</span> <span class=\"token string\">'my_p'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        text<span class=\"token operator\">:</span> <span class=\"token string\">'123'</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li><p>以后vue数据更新</p>\n<ul>\n<li>生成新的虚拟DOM结构</li>\n<li>和旧的虚拟DOM结构对比</li>\n<li>找不不同, 只更新变化的部分(重绘/回流)到页面 - 也叫打补丁</li>\n</ul>\n</li>\n</ol>\n<p>==好处1: 提高了更新DOM的性能(不用把页面全删除重新渲染)==</p>\n<p>==好处2: 虚拟DOM只包含必要的属性(没有真实DOM上百个属性)==</p>\n</li>\n</ol>\n<h2 id=\"2-key的作用\"><a href=\"#2-key的作用\" class=\"headerlink\" title=\"2-key的作用:\"></a>2-key的作用:</h2><h3 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h3><p>无key, 就地更新</p>\n<p>有key为索引, 就地更新</p>\n<p>有key为id, 对比新旧DOM, 无则创建/删除</p>\n<h3 id=\"1-无key-就地更新\"><a href=\"#1-无key-就地更新\" class=\"headerlink\" title=\"1,无key - 就地更新\"></a>1,无key - 就地更新</h3><p>v-for不会移动DOM, 而是尝试复用, 就地更新，如果需要v-for移动DOM, 你需要用特殊 attribute <code>key</code> 来提供一个排序提示</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;ul id&#x3D;&quot;myUL&quot;&gt;\n    &lt;li v-for&#x3D;&quot;str in arr&quot;&gt;\n        &#123;&#123; str &#125;&#125; \n        &lt;input type&#x3D;&quot;text&quot;&gt;\n    &lt;&#x2F;li&gt;\n&lt;&#x2F;ul&gt;\n&lt;button @click&#x3D;&quot;addFn&quot;&gt;下标为1的位置新增一个&lt;&#x2F;button&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n            arr<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"老大\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"新来的\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"老二\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"老三\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">addFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'新来的'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>旧 - DOM结构  和  新 - DOM结构 对比过程</p>\n<p><img src=\"/2019/11/15/vue%E5%9F%BA%E7%A1%80%E5%B1%9E%E6%80%A7/image-20211115152931976.png\" alt=\"image-20211115152931976\"></p>\n<h3 id=\"2-有key-值为索引-就地更新\"><a href=\"#2-有key-值为索引-就地更新\" class=\"headerlink\" title=\"2,有key - 值为索引 - 就地更新\"></a>2,有key - 值为索引 - 就地更新</h3><ul>\n<li>还是就地更新</li>\n</ul>\n<p>因为新旧虚拟DOM对比, key存在就复用此标签更新内容, 如果不存在就直接建立一个新的</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;ul id&#x3D;&quot;myUL&quot;&gt;\n    &lt;li v-for&#x3D;&quot;(str, index) in arr&quot; :key&#x3D;&quot;index&quot;&gt;\n        &#123;&#123; str &#125;&#125; \n        &lt;input type&#x3D;&quot;text&quot;&gt;\n    &lt;&#x2F;li&gt;\n&lt;&#x2F;ul&gt;\n&lt;button @click&#x3D;&quot;addFn&quot;&gt;下标为1的位置新增一个&lt;&#x2F;button&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n            arr<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"老大\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"新来的\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"老二\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"老三\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">addFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'新来的'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>图解:</p>\n<p><img src=\"/2019/11/15/vue%E5%9F%BA%E7%A1%80%E5%B1%9E%E6%80%A7/image-20211115153036413.png\" alt=\"image-20211115153036413\"></p>\n<ol>\n<li><p>v-for先循环产生新的DOM结构, key是连续的, 和数据对应</p>\n</li>\n<li><p>然后比较新旧DOM结构, 找到区别, 打补丁到页面上</p>\n<p>最后补一个li, 然后从第二个往后, 都要更新内容</p>\n<p>==口诀: key的值有id用id, 没id用索引==</p>\n</li>\n</ol>\n<h3 id=\"3-有key-值为id-性能最高\"><a href=\"#3-有key-值为id-性能最高\" class=\"headerlink\" title=\"3,有key - 值为id - 性能最高\"></a>3,有key - 值为id - 性能最高</h3><p>key的值只能是唯一不重复的, 字符串或数值</p>\n<p>v-for不会移动DOM, 而是尝试复用, 就地更新，如果需要v-for移动DOM, 你需要用特殊 attribute <code>key</code> 来提供一个排序提示</p>\n<p>新DOM里数据的key存在, 去旧的虚拟DOM结构里找到key标记的标签, 复用标签</p>\n<p>新DOM里数据的key存在, 去旧的虚拟DOM结构里没有找到key标签的标签, 创建</p>\n<p>旧DOM结构的key, 在新的DOM结构里没有了, 则==移除key所在的标签==</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>li v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"obj in arr\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"obj.id\"</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> obj<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"btn\"</span><span class=\"token operator\">></span>下标<span class=\"token number\">1</span>位置插入新来的<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n      arr<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n          name<span class=\"token operator\">:</span> <span class=\"token string\">'老大'</span><span class=\"token punctuation\">,</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">50</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          name<span class=\"token operator\">:</span> <span class=\"token string\">'老二'</span><span class=\"token punctuation\">,</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">31</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          name<span class=\"token operator\">:</span> <span class=\"token string\">'老三'</span><span class=\"token punctuation\">,</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">btn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n        id<span class=\"token operator\">:</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> \n        name<span class=\"token operator\">:</span> <span class=\"token string\">'新来的'</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>图解:<img src=\"/2019/11/15/vue%E5%9F%BA%E7%A1%80%E5%B1%9E%E6%80%A7/image-20211115153220820.png\" alt=\"image-20211115153220820\"></p>\n<p><code>总结: 不用key也不影响功能(就地更新), 添加key可以提高更新的性能</code></p>\n<h2 id=\"3-Vue计算属性-computed\"><a href=\"#3-Vue计算属性-computed\" class=\"headerlink\" title=\"3-Vue计算属性-computed\"></a>3-Vue计算属性-computed</h2><p>总结:<code>一个数据, 依赖另外一些数据计算而来的结果</code></p>\n<p>语法:</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"计算属性名\"</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"值\"</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>案例:需求: 求2个数的和显示到页面上</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;p&gt;&#123;&#123; num &#125;&#125;&lt;&#x2F;p&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data()&#123;\n    return &#123;\n      a: 10,\n      b: 20\n    &#125;\n  &#125;,\n  &#x2F;&#x2F; 计算属性:\n  &#x2F;&#x2F; 场景: 一个变量的值, 需要用另外变量计算而得来\n  &#x2F;*\n    语法:\n    computed: &#123;\n      计算属性名 () &#123;\n        return 值\n      &#125;\n    &#125;\n  *&#x2F;\n &#x2F;&#x2F; 注意: 计算属性和data属性都是变量-不能重名\n &#x2F;&#x2F; 注意2: 函数内变量变化, 会自动重新计算结果返回\n  computed: &#123;\n    num()&#123;\n      return this.a + this.b\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;\n\n&lt;style&gt;\n\n&lt;&#x2F;style&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-vue监听器\"><a href=\"#4-vue监听器\" class=\"headerlink\" title=\"4-vue监听器:\"></a>4-vue监听器:</h2><p>==想要侦听一个属性变化, 可使用侦听属性watch==</p>\n<p>作用:<code>可以侦听data/computed属性值改变</code></p>\n<p>语法:</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"被侦听的属性名\"</span> <span class=\"token punctuation\">(</span>newVal<span class=\"token punctuation\">,</span> oldVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        \n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>完整例子:</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;name&quot;&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data()&#123;\n    return &#123;\n      name: &quot;&quot;\n    &#125;\n  &#125;,\n  &#x2F;&#x2F; 目标: 侦听到name值的改变\n  &#x2F;*\n  语法:\n    watch: &#123;\n      变量名 (newVal, oldVal)&#123;\n        &#x2F;&#x2F; 变量名对应值改变这里自动触发\n      &#125;\n    &#125;\n  *&#x2F;\n  watch: &#123;\n    &#x2F;&#x2F; newVal: 当前最新值\n    &#x2F;&#x2F; oldVal: 上一刻值\n    name(newVal, oldVal)&#123;\n      console.log(newVal, oldVal);\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;\n\n&lt;style&gt;\n\n&lt;&#x2F;style&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"vue生命周期","date":"2019-11-18T12:41:13.000Z","_content":"\n\n\n\n\n\n\n# vue的生命周期以及钩子函数:\n\n<!--more-->\n\n# 1-vue的生命周期:\n\n`vue的生命周期从Vue实例, 创建到销毁的过程`\n\n图解:\n\n![vue的生命周期](vue生命周期/vue的生命周期.jpg)\n\n# 2-钩子函数:\n\n## 1,概念:\n\n**Vue** 框架内置函数，随着组件的生命周期阶段，自动执行\n\n作用: 特定的时间点，执行特定的操作\n\n## 2,分类\n\n| **阶段** | **方法名**    | **方法名** |\n| -------- | ------------- | ---------- |\n| 初始化   | beforeCreate  | created    |\n| `挂载`   | beforeMount   | mounted    |\n| `更新`   | beforeUpdate  | updated    |\n| 销毁     | beforeDestroy | destroyed  |\n\n","source":"_posts/vue生命周期.md","raw":"---\ntitle: vue生命周期\ndate: 2019-11-18 20:41:13\ntags:\n   - 前端\n   - vue\ncategories: \n   - vue\n---\n\n\n\n\n\n\n\n# vue的生命周期以及钩子函数:\n\n<!--more-->\n\n# 1-vue的生命周期:\n\n`vue的生命周期从Vue实例, 创建到销毁的过程`\n\n图解:\n\n![vue的生命周期](vue生命周期/vue的生命周期.jpg)\n\n# 2-钩子函数:\n\n## 1,概念:\n\n**Vue** 框架内置函数，随着组件的生命周期阶段，自动执行\n\n作用: 特定的时间点，执行特定的操作\n\n## 2,分类\n\n| **阶段** | **方法名**    | **方法名** |\n| -------- | ------------- | ---------- |\n| 初始化   | beforeCreate  | created    |\n| `挂载`   | beforeMount   | mounted    |\n| `更新`   | beforeUpdate  | updated    |\n| 销毁     | beforeDestroy | destroyed  |\n\n","slug":"vue生命周期","published":1,"updated":"2021-11-18T13:01:40.473Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckw4zukp10007a0ty6xdr9klx","content":"<h1 id=\"vue的生命周期以及钩子函数\"><a href=\"#vue的生命周期以及钩子函数\" class=\"headerlink\" title=\"vue的生命周期以及钩子函数:\"></a>vue的生命周期以及钩子函数:</h1><span id=\"more\"></span>\n\n<h1 id=\"1-vue的生命周期\"><a href=\"#1-vue的生命周期\" class=\"headerlink\" title=\"1-vue的生命周期:\"></a>1-vue的生命周期:</h1><p><code>vue的生命周期从Vue实例, 创建到销毁的过程</code></p>\n<p>图解:</p>\n<p><img src=\"/2019/11/18/vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/vue%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.jpg\" alt=\"vue的生命周期\"></p>\n<h1 id=\"2-钩子函数\"><a href=\"#2-钩子函数\" class=\"headerlink\" title=\"2-钩子函数:\"></a>2-钩子函数:</h1><h2 id=\"1-概念\"><a href=\"#1-概念\" class=\"headerlink\" title=\"1,概念:\"></a>1,概念:</h2><p><strong>Vue</strong> 框架内置函数，随着组件的生命周期阶段，自动执行</p>\n<p>作用: 特定的时间点，执行特定的操作</p>\n<h2 id=\"2-分类\"><a href=\"#2-分类\" class=\"headerlink\" title=\"2,分类\"></a>2,分类</h2><table>\n<thead>\n<tr>\n<th><strong>阶段</strong></th>\n<th><strong>方法名</strong></th>\n<th><strong>方法名</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>初始化</td>\n<td>beforeCreate</td>\n<td>created</td>\n</tr>\n<tr>\n<td><code>挂载</code></td>\n<td>beforeMount</td>\n<td>mounted</td>\n</tr>\n<tr>\n<td><code>更新</code></td>\n<td>beforeUpdate</td>\n<td>updated</td>\n</tr>\n<tr>\n<td>销毁</td>\n<td>beforeDestroy</td>\n<td>destroyed</td>\n</tr>\n</tbody></table>\n","site":{"data":{"styles":"body {\n  background: url(\"/images/background.gif\");\n  background-repeat: repeat;\n  background-attachment: fixed;\n}\n.content-wrap {\n  opacity: 0.9;\n}\n.sidebar {\n  opacity: 0.9;\n}\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n.popup {\n  opacity: 0.9;\n}\n"}},"abbrlink":"5K83G8","excerpt":"<h1 id=\"vue的生命周期以及钩子函数\"><a href=\"#vue的生命周期以及钩子函数\" class=\"headerlink\" title=\"vue的生命周期以及钩子函数:\"></a>vue的生命周期以及钩子函数:</h1>","more":"<h1 id=\"1-vue的生命周期\"><a href=\"#1-vue的生命周期\" class=\"headerlink\" title=\"1-vue的生命周期:\"></a>1-vue的生命周期:</h1><p><code>vue的生命周期从Vue实例, 创建到销毁的过程</code></p>\n<p>图解:</p>\n<p><img src=\"/2019/11/18/vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/vue%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.jpg\" alt=\"vue的生命周期\"></p>\n<h1 id=\"2-钩子函数\"><a href=\"#2-钩子函数\" class=\"headerlink\" title=\"2-钩子函数:\"></a>2-钩子函数:</h1><h2 id=\"1-概念\"><a href=\"#1-概念\" class=\"headerlink\" title=\"1,概念:\"></a>1,概念:</h2><p><strong>Vue</strong> 框架内置函数，随着组件的生命周期阶段，自动执行</p>\n<p>作用: 特定的时间点，执行特定的操作</p>\n<h2 id=\"2-分类\"><a href=\"#2-分类\" class=\"headerlink\" title=\"2,分类\"></a>2,分类</h2><table>\n<thead>\n<tr>\n<th><strong>阶段</strong></th>\n<th><strong>方法名</strong></th>\n<th><strong>方法名</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>初始化</td>\n<td>beforeCreate</td>\n<td>created</td>\n</tr>\n<tr>\n<td><code>挂载</code></td>\n<td>beforeMount</td>\n<td>mounted</td>\n</tr>\n<tr>\n<td><code>更新</code></td>\n<td>beforeUpdate</td>\n<td>updated</td>\n</tr>\n<tr>\n<td>销毁</td>\n<td>beforeDestroy</td>\n<td>destroyed</td>\n</tr>\n</tbody></table>"},{"title":"vue组件使用","date":"2019-11-17T12:47:50.000Z","_content":"\n\n\n\n\n# vue组件使用及通信\n\n<!--more-->\n\n## 1-组件概念和使用:\n\n### 1,组件概念:\n\n`组件是可复用的 Vue 实例, 封装标签, 样式和JS代码`\n\n**组件化** ：封装的思想，把页面上 `可重用的部分` 封装为 `组件`，从而方便项目的 开发 和 维护\n\n**一个页面， 可以拆分成一个个组件，一个组件就是一个整体, 每个组件可以有自己独立的 结构 样式 和 行为(html, css和js)**\n\n\n\n组件有点: **各自独立**, **互不影响**\n\n### 2,组件使用:\n\n1.  创建.vue文件–标签–样式–JS进去\n2. 导入组件(import xxx from 'path/to/components/xxx.vue')\n3. 注册组件(全局/ 局部)\n4. 使用组件(组件名用作标签)\n\n语法:\n\n```js\nimport Vue from 'vue'\nimport 组件对象 from 'vue文件路径'\n\nVue.component(\"组件名\", 组件对象)\n\n```\n\n\n\n1. 局部注册:任意vue文件中中引入, 注册, 使用\n2. 全局注册:局注册PannelG组件名后, 就可以当做标签在任意Vue文件中template里用\n\n\n\n总结:\n\n1. (创建)封装html+css+vue到独立的.vue文件中\n2. (引入注册)组件文件 => 得到组件配置对象\n3. (使用)当前页面当做标签使用\n\n\n\n### 3,组件-scoped作用\n\n作用:**解决多个组件样式名相同, 冲突问题**\n\n```js\n<style scoped> //style上加scoped, 组件内的样式只在当前vue组件生效\n```\n\n原理:\n\n**在style上加入scoped属性, 就会在此组件的标签上加上一个随机生成的data-v开头的属性**\n\n**而且必须是当前组件的元素, 才会有这个自定义属性, 才会被这个样式作用到**\n\n\n\n## 2-组件通信:\n\n因为每个组件的变量和值都是独立的\n\n组件通信先暂时关注父传子, 子传父\n\n\n\n### 1,父向子通信:\n\n口诀(步骤):\n\n1. 子组件内, props定义变量, 在子组件使用变量\n2. 父组件内, 使用子组件, 属性方式给props变量传值\n\n\n\n案例: 父向子配合循环:\n\n数据:\n\n```js\nlist: [\n    { id: 1, proname: \"超级好吃的棒棒糖\", proprice: 18.8, info: '开业大酬宾, 全场8折' },\n    { id: 2, proname: \"超级好吃的大鸡腿\", proprice: 34.2, info: '好吃不腻, 快来买啊' },\n    { id: 3, proname: \"超级无敌的冰激凌\", proprice: 14.2, info: '炎热的夏天, 来个冰激凌了' },\n],\n```\n\n```js\n<template>\n  <div>\n    <MyProduct v-for=\"obj in list\" :key=\"obj.id\"\n    :title=\"obj.proname\"\n    :price=\"obj.proprice\"\n    :intro=\"obj.info\"\n    ></MyProduct>\n  </div>\n</template>\n\n<script>\n// 目标: 循环使用组件-分别传入数据\n// 1. 创建组件\n// 2. 引入组件\nimport MyProduct from './components/MyProduct'\nexport default {\n  data() {\n    return {\n      list: [\n        {\n          id: 1,\n          proname: \"超级好吃的棒棒糖\",\n          proprice: 18.8,\n          info: \"开业大酬宾, 全场8折\",\n        },\n        {\n          id: 2,\n          proname: \"超级好吃的大鸡腿\",\n          proprice: 34.2,\n          info: \"好吃不腻, 快来买啊\",\n        },\n        {\n          id: 3,\n          proname: \"超级无敌的冰激凌\",\n          proprice: 14.2,\n          info: \"炎热的夏天, 来个冰激凌了\",\n        },\n      ],\n    };\n  },\n  // 3. 注册组件\n  components: {\n    // MyProduct: MyProduct\n    MyProduct\n  }\n};\n</script>\n\n<style>\n</style>\n```\n\n### 2,组件通信_单项数据流:\n\n在vue中需要遵循单向数据流原则\n\n    1. 父组件的数据发生了改变，子组件会自动跟着变\n    2. 子组件不能直接修改父组件传递过来的props  props是只读的\n\n`父组件传给子组件的是一个对象，子组件修改对象的属性，是不会报错的，对象是引用类型, 互相更新`\n\n`总结: props的值不能重新赋值, 对象引用关系属性值改变, 互相影响`\n\n### 3,子向父通信:\n\n`总结: 父自定义事件和方法, 等待子组件触发事件给方法传值`\n\n语法:\n\n* 父: @自定义事件名=\"父methods函数\"\n* 子: this.$emit(\"自定义事件名\", 传值) - 执行父methods里函数代码\n\n组件:\n\n```js\n<template>\n  <div class=\"my-product\">\n    <h3>标题: {{ title }}</h3>\n    <p>价格: {{ price }}元</p>\n    <p>{{ intro }}</p>\n    <button @click=\"subFn\">宝刀-砍1元</button>\n  </div>\n</template>\n\n<script>\nimport eventBus from '../EventBus'\nexport default {\n  props: ['index', 'title', 'price', 'intro'],\n  methods: {\n    subFn(){\n      this.$emit('subprice', this.index, 1) // 子向父\n      eventBus.$emit(\"send\", this.index, 1) // 跨组件\n    }\n  }\n}\n</script>\n\n<style>\n.my-product {\n  width: 400px;\n  padding: 20px;\n  border: 2px solid #000;\n  border-radius: 5px;\n  margin: 10px;\n}\n</style>\n```\n\nApp.vue\n\n```js\n,mmm<template>\n  <div>\n    <!-- 目标: 子传父 -->\n    <!-- 1. 父组件, @自定义事件名=\"父methods函数\" -->\n    <MyProduct v-for=\"(obj, ind) in list\" :key=\"obj.id\"\n    :title=\"obj.proname\"\n    :price=\"obj.proprice\"\n    :intro=\"obj.info\"\n    :index=\"ind\"\n    @subprice=\"fn\"\n    ></MyProduct>\n  </div>\n</template>\n\n<script>\n\nimport MyProduct from './components/MyProduct_sub'\nexport default {\n  data() {\n    return {\n      list: [\n        {\n          id: 1,\n          proname: \"超级好吃的棒棒糖\",\n          proprice: 18.8,\n          info: \"开业大酬宾, 全场8折\",\n        },\n        {\n          id: 2,\n          proname: \"超级好吃的大鸡腿\",\n          proprice: 34.2,\n          info: \"好吃不腻, 快来买啊\",\n        },\n        {\n          id: 3,\n          proname: \"超级无敌的冰激凌\",\n          proprice: 14.2,\n          info: \"炎热的夏天, 来个冰激凌了\",\n        },\n      ],\n    };\n  },\n  components: {\n    MyProduct\n  },\n  methods: {\n    fn(inde, price){\n      // 逻辑代码\n      this.list[inde].proprice > 1 && (this.list[inde].proprice = (this.list[inde].proprice - price).toFixed(2))\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n```\n\n## 3-总结:\n\n### Vue组件如何进行传值的\n\n父向子 -> props定义变量 -> 父在使用组件用属性给props变量传值\n\n子向父 -> $emit触发父的事件 -> 父在使用组件用@自定义事件名=父的方法 (子把值带出来)\n","source":"_posts/vue组件使用.md","raw":"---\ntitle: vue组件使用\ndate: 2019-11-17 20:47:50\ntags:\n   - 前端\n   - vue\ncategories: \n   - vue\n---\n\n\n\n\n\n# vue组件使用及通信\n\n<!--more-->\n\n## 1-组件概念和使用:\n\n### 1,组件概念:\n\n`组件是可复用的 Vue 实例, 封装标签, 样式和JS代码`\n\n**组件化** ：封装的思想，把页面上 `可重用的部分` 封装为 `组件`，从而方便项目的 开发 和 维护\n\n**一个页面， 可以拆分成一个个组件，一个组件就是一个整体, 每个组件可以有自己独立的 结构 样式 和 行为(html, css和js)**\n\n\n\n组件有点: **各自独立**, **互不影响**\n\n### 2,组件使用:\n\n1.  创建.vue文件–标签–样式–JS进去\n2. 导入组件(import xxx from 'path/to/components/xxx.vue')\n3. 注册组件(全局/ 局部)\n4. 使用组件(组件名用作标签)\n\n语法:\n\n```js\nimport Vue from 'vue'\nimport 组件对象 from 'vue文件路径'\n\nVue.component(\"组件名\", 组件对象)\n\n```\n\n\n\n1. 局部注册:任意vue文件中中引入, 注册, 使用\n2. 全局注册:局注册PannelG组件名后, 就可以当做标签在任意Vue文件中template里用\n\n\n\n总结:\n\n1. (创建)封装html+css+vue到独立的.vue文件中\n2. (引入注册)组件文件 => 得到组件配置对象\n3. (使用)当前页面当做标签使用\n\n\n\n### 3,组件-scoped作用\n\n作用:**解决多个组件样式名相同, 冲突问题**\n\n```js\n<style scoped> //style上加scoped, 组件内的样式只在当前vue组件生效\n```\n\n原理:\n\n**在style上加入scoped属性, 就会在此组件的标签上加上一个随机生成的data-v开头的属性**\n\n**而且必须是当前组件的元素, 才会有这个自定义属性, 才会被这个样式作用到**\n\n\n\n## 2-组件通信:\n\n因为每个组件的变量和值都是独立的\n\n组件通信先暂时关注父传子, 子传父\n\n\n\n### 1,父向子通信:\n\n口诀(步骤):\n\n1. 子组件内, props定义变量, 在子组件使用变量\n2. 父组件内, 使用子组件, 属性方式给props变量传值\n\n\n\n案例: 父向子配合循环:\n\n数据:\n\n```js\nlist: [\n    { id: 1, proname: \"超级好吃的棒棒糖\", proprice: 18.8, info: '开业大酬宾, 全场8折' },\n    { id: 2, proname: \"超级好吃的大鸡腿\", proprice: 34.2, info: '好吃不腻, 快来买啊' },\n    { id: 3, proname: \"超级无敌的冰激凌\", proprice: 14.2, info: '炎热的夏天, 来个冰激凌了' },\n],\n```\n\n```js\n<template>\n  <div>\n    <MyProduct v-for=\"obj in list\" :key=\"obj.id\"\n    :title=\"obj.proname\"\n    :price=\"obj.proprice\"\n    :intro=\"obj.info\"\n    ></MyProduct>\n  </div>\n</template>\n\n<script>\n// 目标: 循环使用组件-分别传入数据\n// 1. 创建组件\n// 2. 引入组件\nimport MyProduct from './components/MyProduct'\nexport default {\n  data() {\n    return {\n      list: [\n        {\n          id: 1,\n          proname: \"超级好吃的棒棒糖\",\n          proprice: 18.8,\n          info: \"开业大酬宾, 全场8折\",\n        },\n        {\n          id: 2,\n          proname: \"超级好吃的大鸡腿\",\n          proprice: 34.2,\n          info: \"好吃不腻, 快来买啊\",\n        },\n        {\n          id: 3,\n          proname: \"超级无敌的冰激凌\",\n          proprice: 14.2,\n          info: \"炎热的夏天, 来个冰激凌了\",\n        },\n      ],\n    };\n  },\n  // 3. 注册组件\n  components: {\n    // MyProduct: MyProduct\n    MyProduct\n  }\n};\n</script>\n\n<style>\n</style>\n```\n\n### 2,组件通信_单项数据流:\n\n在vue中需要遵循单向数据流原则\n\n    1. 父组件的数据发生了改变，子组件会自动跟着变\n    2. 子组件不能直接修改父组件传递过来的props  props是只读的\n\n`父组件传给子组件的是一个对象，子组件修改对象的属性，是不会报错的，对象是引用类型, 互相更新`\n\n`总结: props的值不能重新赋值, 对象引用关系属性值改变, 互相影响`\n\n### 3,子向父通信:\n\n`总结: 父自定义事件和方法, 等待子组件触发事件给方法传值`\n\n语法:\n\n* 父: @自定义事件名=\"父methods函数\"\n* 子: this.$emit(\"自定义事件名\", 传值) - 执行父methods里函数代码\n\n组件:\n\n```js\n<template>\n  <div class=\"my-product\">\n    <h3>标题: {{ title }}</h3>\n    <p>价格: {{ price }}元</p>\n    <p>{{ intro }}</p>\n    <button @click=\"subFn\">宝刀-砍1元</button>\n  </div>\n</template>\n\n<script>\nimport eventBus from '../EventBus'\nexport default {\n  props: ['index', 'title', 'price', 'intro'],\n  methods: {\n    subFn(){\n      this.$emit('subprice', this.index, 1) // 子向父\n      eventBus.$emit(\"send\", this.index, 1) // 跨组件\n    }\n  }\n}\n</script>\n\n<style>\n.my-product {\n  width: 400px;\n  padding: 20px;\n  border: 2px solid #000;\n  border-radius: 5px;\n  margin: 10px;\n}\n</style>\n```\n\nApp.vue\n\n```js\n,mmm<template>\n  <div>\n    <!-- 目标: 子传父 -->\n    <!-- 1. 父组件, @自定义事件名=\"父methods函数\" -->\n    <MyProduct v-for=\"(obj, ind) in list\" :key=\"obj.id\"\n    :title=\"obj.proname\"\n    :price=\"obj.proprice\"\n    :intro=\"obj.info\"\n    :index=\"ind\"\n    @subprice=\"fn\"\n    ></MyProduct>\n  </div>\n</template>\n\n<script>\n\nimport MyProduct from './components/MyProduct_sub'\nexport default {\n  data() {\n    return {\n      list: [\n        {\n          id: 1,\n          proname: \"超级好吃的棒棒糖\",\n          proprice: 18.8,\n          info: \"开业大酬宾, 全场8折\",\n        },\n        {\n          id: 2,\n          proname: \"超级好吃的大鸡腿\",\n          proprice: 34.2,\n          info: \"好吃不腻, 快来买啊\",\n        },\n        {\n          id: 3,\n          proname: \"超级无敌的冰激凌\",\n          proprice: 14.2,\n          info: \"炎热的夏天, 来个冰激凌了\",\n        },\n      ],\n    };\n  },\n  components: {\n    MyProduct\n  },\n  methods: {\n    fn(inde, price){\n      // 逻辑代码\n      this.list[inde].proprice > 1 && (this.list[inde].proprice = (this.list[inde].proprice - price).toFixed(2))\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n```\n\n## 3-总结:\n\n### Vue组件如何进行传值的\n\n父向子 -> props定义变量 -> 父在使用组件用属性给props变量传值\n\n子向父 -> $emit触发父的事件 -> 父在使用组件用@自定义事件名=父的方法 (子把值带出来)\n","slug":"vue组件使用","published":1,"updated":"2021-11-18T12:38:32.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckw4zukp10008a0tyhz0m9910","content":"<h1 id=\"vue组件使用及通信\"><a href=\"#vue组件使用及通信\" class=\"headerlink\" title=\"vue组件使用及通信\"></a>vue组件使用及通信</h1><span id=\"more\"></span>\n\n<h2 id=\"1-组件概念和使用\"><a href=\"#1-组件概念和使用\" class=\"headerlink\" title=\"1-组件概念和使用:\"></a>1-组件概念和使用:</h2><h3 id=\"1-组件概念\"><a href=\"#1-组件概念\" class=\"headerlink\" title=\"1,组件概念:\"></a>1,组件概念:</h3><p><code>组件是可复用的 Vue 实例, 封装标签, 样式和JS代码</code></p>\n<p><strong>组件化</strong> ：封装的思想，把页面上 <code>可重用的部分</code> 封装为 <code>组件</code>，从而方便项目的 开发 和 维护</p>\n<p><strong>一个页面， 可以拆分成一个个组件，一个组件就是一个整体, 每个组件可以有自己独立的 结构 样式 和 行为(html, css和js)</strong></p>\n<p>组件有点: <strong>各自独立</strong>, <strong>互不影响</strong></p>\n<h3 id=\"2-组件使用\"><a href=\"#2-组件使用\" class=\"headerlink\" title=\"2,组件使用:\"></a>2,组件使用:</h3><ol>\n<li> 创建.vue文件–标签–样式–JS进去</li>\n<li>导入组件(import xxx from ‘path/to/components/xxx.vue’)</li>\n<li>注册组件(全局/ 局部)</li>\n<li>使用组件(组件名用作标签)</li>\n</ol>\n<p>语法:</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> 组件对象 <span class=\"token keyword\">from</span> <span class=\"token string\">'vue文件路径'</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"组件名\"</span><span class=\"token punctuation\">,</span> 组件对象<span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<ol>\n<li>局部注册:任意vue文件中中引入, 注册, 使用</li>\n<li>全局注册:局注册PannelG组件名后, 就可以当做标签在任意Vue文件中template里用</li>\n</ol>\n<p>总结:</p>\n<ol>\n<li>(创建)封装html+css+vue到独立的.vue文件中</li>\n<li>(引入注册)组件文件 =&gt; 得到组件配置对象</li>\n<li>(使用)当前页面当做标签使用</li>\n</ol>\n<h3 id=\"3-组件-scoped作用\"><a href=\"#3-组件-scoped作用\" class=\"headerlink\" title=\"3,组件-scoped作用\"></a>3,组件-scoped作用</h3><p>作用:<strong>解决多个组件样式名相同, 冲突问题</strong></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>style scoped<span class=\"token operator\">></span> <span class=\"token comment\">//style上加scoped, 组件内的样式只在当前vue组件生效</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>原理:</p>\n<p><strong>在style上加入scoped属性, 就会在此组件的标签上加上一个随机生成的data-v开头的属性</strong></p>\n<p><strong>而且必须是当前组件的元素, 才会有这个自定义属性, 才会被这个样式作用到</strong></p>\n<h2 id=\"2-组件通信\"><a href=\"#2-组件通信\" class=\"headerlink\" title=\"2-组件通信:\"></a>2-组件通信:</h2><p>因为每个组件的变量和值都是独立的</p>\n<p>组件通信先暂时关注父传子, 子传父</p>\n<h3 id=\"1-父向子通信\"><a href=\"#1-父向子通信\" class=\"headerlink\" title=\"1,父向子通信:\"></a>1,父向子通信:</h3><p>口诀(步骤):</p>\n<ol>\n<li>子组件内, props定义变量, 在子组件使用变量</li>\n<li>父组件内, 使用子组件, 属性方式给props变量传值</li>\n</ol>\n<p>案例: 父向子配合循环:</p>\n<p>数据:</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">list<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级好吃的棒棒糖\"</span><span class=\"token punctuation\">,</span> proprice<span class=\"token operator\">:</span> <span class=\"token number\">18.8</span><span class=\"token punctuation\">,</span> info<span class=\"token operator\">:</span> <span class=\"token string\">'开业大酬宾, 全场8折'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级好吃的大鸡腿\"</span><span class=\"token punctuation\">,</span> proprice<span class=\"token operator\">:</span> <span class=\"token number\">34.2</span><span class=\"token punctuation\">,</span> info<span class=\"token operator\">:</span> <span class=\"token string\">'好吃不腻, 快来买啊'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级无敌的冰激凌\"</span><span class=\"token punctuation\">,</span> proprice<span class=\"token operator\">:</span> <span class=\"token number\">14.2</span><span class=\"token punctuation\">,</span> info<span class=\"token operator\">:</span> <span class=\"token string\">'炎热的夏天, 来个冰激凌了'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>MyProduct v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"obj in list\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"obj.id\"</span>\n    <span class=\"token operator\">:</span>title<span class=\"token operator\">=</span><span class=\"token string\">\"obj.proname\"</span>\n    <span class=\"token operator\">:</span>price<span class=\"token operator\">=</span><span class=\"token string\">\"obj.proprice\"</span>\n    <span class=\"token operator\">:</span>intro<span class=\"token operator\">=</span><span class=\"token string\">\"obj.info\"</span>\n    <span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MyProduct<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token comment\">// 目标: 循环使用组件-分别传入数据</span>\n<span class=\"token comment\">// 1. 创建组件</span>\n<span class=\"token comment\">// 2. 引入组件</span>\n<span class=\"token keyword\">import</span> MyProduct <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/MyProduct'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n      list<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级好吃的棒棒糖\"</span><span class=\"token punctuation\">,</span>\n          proprice<span class=\"token operator\">:</span> <span class=\"token number\">18.8</span><span class=\"token punctuation\">,</span>\n          info<span class=\"token operator\">:</span> <span class=\"token string\">\"开业大酬宾, 全场8折\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n          proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级好吃的大鸡腿\"</span><span class=\"token punctuation\">,</span>\n          proprice<span class=\"token operator\">:</span> <span class=\"token number\">34.2</span><span class=\"token punctuation\">,</span>\n          info<span class=\"token operator\">:</span> <span class=\"token string\">\"好吃不腻, 快来买啊\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n          proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级无敌的冰激凌\"</span><span class=\"token punctuation\">,</span>\n          proprice<span class=\"token operator\">:</span> <span class=\"token number\">14.2</span><span class=\"token punctuation\">,</span>\n          info<span class=\"token operator\">:</span> <span class=\"token string\">\"炎热的夏天, 来个冰激凌了\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 3. 注册组件</span>\n  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// MyProduct: MyProduct</span>\n    MyProduct\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-组件通信-单项数据流\"><a href=\"#2-组件通信-单项数据流\" class=\"headerlink\" title=\"2,组件通信_单项数据流:\"></a>2,组件通信_单项数据流:</h3><p>在vue中需要遵循单向数据流原则</p>\n<pre><code>1. 父组件的数据发生了改变，子组件会自动跟着变\n2. 子组件不能直接修改父组件传递过来的props  props是只读的\n</code></pre>\n<p><code>父组件传给子组件的是一个对象，子组件修改对象的属性，是不会报错的，对象是引用类型, 互相更新</code></p>\n<p><code>总结: props的值不能重新赋值, 对象引用关系属性值改变, 互相影响</code></p>\n<h3 id=\"3-子向父通信\"><a href=\"#3-子向父通信\" class=\"headerlink\" title=\"3,子向父通信:\"></a>3,子向父通信:</h3><p><code>总结: 父自定义事件和方法, 等待子组件触发事件给方法传值</code></p>\n<p>语法:</p>\n<ul>\n<li>父: @自定义事件名=”父methods函数”</li>\n<li>子: this.$emit(“自定义事件名”, 传值) - 执行父methods里函数代码</li>\n</ul>\n<p>组件:</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"my-product\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">></span>标题<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> title <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>价格<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> price <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>元<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> intro <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"subFn\"</span><span class=\"token operator\">></span>宝刀<span class=\"token operator\">-</span>砍<span class=\"token number\">1</span>元<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> eventBus <span class=\"token keyword\">from</span> <span class=\"token string\">'../EventBus'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'price'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'intro'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">subFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'subprice'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 子向父</span>\n      eventBus<span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 跨组件</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n<span class=\"token punctuation\">.</span>my<span class=\"token operator\">-</span>product <span class=\"token punctuation\">&#123;</span>\n  width<span class=\"token operator\">:</span> <span class=\"token number\">400</span>px<span class=\"token punctuation\">;</span>\n  padding<span class=\"token operator\">:</span> <span class=\"token number\">20</span>px<span class=\"token punctuation\">;</span>\n  border<span class=\"token operator\">:</span> <span class=\"token number\">2</span>px solid #<span class=\"token number\">000</span><span class=\"token punctuation\">;</span>\n  border<span class=\"token operator\">-</span>radius<span class=\"token operator\">:</span> <span class=\"token number\">5</span>px<span class=\"token punctuation\">;</span>\n  margin<span class=\"token operator\">:</span> <span class=\"token number\">10</span>px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>App.vue</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token punctuation\">,</span>mmm<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 目标<span class=\"token operator\">:</span> 子传父 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> <span class=\"token number\">1.</span> 父组件<span class=\"token punctuation\">,</span> @自定义事件名<span class=\"token operator\">=</span><span class=\"token string\">\"父methods函数\"</span> <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>MyProduct v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(obj, ind) in list\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"obj.id\"</span>\n    <span class=\"token operator\">:</span>title<span class=\"token operator\">=</span><span class=\"token string\">\"obj.proname\"</span>\n    <span class=\"token operator\">:</span>price<span class=\"token operator\">=</span><span class=\"token string\">\"obj.proprice\"</span>\n    <span class=\"token operator\">:</span>intro<span class=\"token operator\">=</span><span class=\"token string\">\"obj.info\"</span>\n    <span class=\"token operator\">:</span>index<span class=\"token operator\">=</span><span class=\"token string\">\"ind\"</span>\n    @subprice<span class=\"token operator\">=</span><span class=\"token string\">\"fn\"</span>\n    <span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MyProduct<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\n<span class=\"token keyword\">import</span> MyProduct <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/MyProduct_sub'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n      list<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级好吃的棒棒糖\"</span><span class=\"token punctuation\">,</span>\n          proprice<span class=\"token operator\">:</span> <span class=\"token number\">18.8</span><span class=\"token punctuation\">,</span>\n          info<span class=\"token operator\">:</span> <span class=\"token string\">\"开业大酬宾, 全场8折\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n          proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级好吃的大鸡腿\"</span><span class=\"token punctuation\">,</span>\n          proprice<span class=\"token operator\">:</span> <span class=\"token number\">34.2</span><span class=\"token punctuation\">,</span>\n          info<span class=\"token operator\">:</span> <span class=\"token string\">\"好吃不腻, 快来买啊\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n          proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级无敌的冰激凌\"</span><span class=\"token punctuation\">,</span>\n          proprice<span class=\"token operator\">:</span> <span class=\"token number\">14.2</span><span class=\"token punctuation\">,</span>\n          info<span class=\"token operator\">:</span> <span class=\"token string\">\"炎热的夏天, 来个冰激凌了\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    MyProduct\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">inde<span class=\"token punctuation\">,</span> price</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 逻辑代码</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span>inde<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>proprice <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span>inde<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>proprice <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span>inde<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>proprice <span class=\"token operator\">-</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-总结\"><a href=\"#3-总结\" class=\"headerlink\" title=\"3-总结:\"></a>3-总结:</h2><h3 id=\"Vue组件如何进行传值的\"><a href=\"#Vue组件如何进行传值的\" class=\"headerlink\" title=\"Vue组件如何进行传值的\"></a>Vue组件如何进行传值的</h3><p>父向子 -&gt; props定义变量 -&gt; 父在使用组件用属性给props变量传值</p>\n<p>子向父 -&gt; $emit触发父的事件 -&gt; 父在使用组件用@自定义事件名=父的方法 (子把值带出来)</p>\n","site":{"data":{"styles":"body {\n  background: url(\"/images/background.gif\");\n  background-repeat: repeat;\n  background-attachment: fixed;\n}\n.content-wrap {\n  opacity: 0.9;\n}\n.sidebar {\n  opacity: 0.9;\n}\n.header-inner {\n  background: rgba(255,255,255,0.9);\n}\n.popup {\n  opacity: 0.9;\n}\n"}},"abbrlink":"37X22MQ","excerpt":"<h1 id=\"vue组件使用及通信\"><a href=\"#vue组件使用及通信\" class=\"headerlink\" title=\"vue组件使用及通信\"></a>vue组件使用及通信</h1>","more":"<h2 id=\"1-组件概念和使用\"><a href=\"#1-组件概念和使用\" class=\"headerlink\" title=\"1-组件概念和使用:\"></a>1-组件概念和使用:</h2><h3 id=\"1-组件概念\"><a href=\"#1-组件概念\" class=\"headerlink\" title=\"1,组件概念:\"></a>1,组件概念:</h3><p><code>组件是可复用的 Vue 实例, 封装标签, 样式和JS代码</code></p>\n<p><strong>组件化</strong> ：封装的思想，把页面上 <code>可重用的部分</code> 封装为 <code>组件</code>，从而方便项目的 开发 和 维护</p>\n<p><strong>一个页面， 可以拆分成一个个组件，一个组件就是一个整体, 每个组件可以有自己独立的 结构 样式 和 行为(html, css和js)</strong></p>\n<p>组件有点: <strong>各自独立</strong>, <strong>互不影响</strong></p>\n<h3 id=\"2-组件使用\"><a href=\"#2-组件使用\" class=\"headerlink\" title=\"2,组件使用:\"></a>2,组件使用:</h3><ol>\n<li> 创建.vue文件–标签–样式–JS进去</li>\n<li>导入组件(import xxx from ‘path/to/components/xxx.vue’)</li>\n<li>注册组件(全局/ 局部)</li>\n<li>使用组件(组件名用作标签)</li>\n</ol>\n<p>语法:</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> 组件对象 <span class=\"token keyword\">from</span> <span class=\"token string\">'vue文件路径'</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"组件名\"</span><span class=\"token punctuation\">,</span> 组件对象<span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<ol>\n<li>局部注册:任意vue文件中中引入, 注册, 使用</li>\n<li>全局注册:局注册PannelG组件名后, 就可以当做标签在任意Vue文件中template里用</li>\n</ol>\n<p>总结:</p>\n<ol>\n<li>(创建)封装html+css+vue到独立的.vue文件中</li>\n<li>(引入注册)组件文件 =&gt; 得到组件配置对象</li>\n<li>(使用)当前页面当做标签使用</li>\n</ol>\n<h3 id=\"3-组件-scoped作用\"><a href=\"#3-组件-scoped作用\" class=\"headerlink\" title=\"3,组件-scoped作用\"></a>3,组件-scoped作用</h3><p>作用:<strong>解决多个组件样式名相同, 冲突问题</strong></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>style scoped<span class=\"token operator\">></span> <span class=\"token comment\">//style上加scoped, 组件内的样式只在当前vue组件生效</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>原理:</p>\n<p><strong>在style上加入scoped属性, 就会在此组件的标签上加上一个随机生成的data-v开头的属性</strong></p>\n<p><strong>而且必须是当前组件的元素, 才会有这个自定义属性, 才会被这个样式作用到</strong></p>\n<h2 id=\"2-组件通信\"><a href=\"#2-组件通信\" class=\"headerlink\" title=\"2-组件通信:\"></a>2-组件通信:</h2><p>因为每个组件的变量和值都是独立的</p>\n<p>组件通信先暂时关注父传子, 子传父</p>\n<h3 id=\"1-父向子通信\"><a href=\"#1-父向子通信\" class=\"headerlink\" title=\"1,父向子通信:\"></a>1,父向子通信:</h3><p>口诀(步骤):</p>\n<ol>\n<li>子组件内, props定义变量, 在子组件使用变量</li>\n<li>父组件内, 使用子组件, 属性方式给props变量传值</li>\n</ol>\n<p>案例: 父向子配合循环:</p>\n<p>数据:</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">list<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级好吃的棒棒糖\"</span><span class=\"token punctuation\">,</span> proprice<span class=\"token operator\">:</span> <span class=\"token number\">18.8</span><span class=\"token punctuation\">,</span> info<span class=\"token operator\">:</span> <span class=\"token string\">'开业大酬宾, 全场8折'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级好吃的大鸡腿\"</span><span class=\"token punctuation\">,</span> proprice<span class=\"token operator\">:</span> <span class=\"token number\">34.2</span><span class=\"token punctuation\">,</span> info<span class=\"token operator\">:</span> <span class=\"token string\">'好吃不腻, 快来买啊'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级无敌的冰激凌\"</span><span class=\"token punctuation\">,</span> proprice<span class=\"token operator\">:</span> <span class=\"token number\">14.2</span><span class=\"token punctuation\">,</span> info<span class=\"token operator\">:</span> <span class=\"token string\">'炎热的夏天, 来个冰激凌了'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>MyProduct v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"obj in list\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"obj.id\"</span>\n    <span class=\"token operator\">:</span>title<span class=\"token operator\">=</span><span class=\"token string\">\"obj.proname\"</span>\n    <span class=\"token operator\">:</span>price<span class=\"token operator\">=</span><span class=\"token string\">\"obj.proprice\"</span>\n    <span class=\"token operator\">:</span>intro<span class=\"token operator\">=</span><span class=\"token string\">\"obj.info\"</span>\n    <span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MyProduct<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token comment\">// 目标: 循环使用组件-分别传入数据</span>\n<span class=\"token comment\">// 1. 创建组件</span>\n<span class=\"token comment\">// 2. 引入组件</span>\n<span class=\"token keyword\">import</span> MyProduct <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/MyProduct'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n      list<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级好吃的棒棒糖\"</span><span class=\"token punctuation\">,</span>\n          proprice<span class=\"token operator\">:</span> <span class=\"token number\">18.8</span><span class=\"token punctuation\">,</span>\n          info<span class=\"token operator\">:</span> <span class=\"token string\">\"开业大酬宾, 全场8折\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n          proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级好吃的大鸡腿\"</span><span class=\"token punctuation\">,</span>\n          proprice<span class=\"token operator\">:</span> <span class=\"token number\">34.2</span><span class=\"token punctuation\">,</span>\n          info<span class=\"token operator\">:</span> <span class=\"token string\">\"好吃不腻, 快来买啊\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n          proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级无敌的冰激凌\"</span><span class=\"token punctuation\">,</span>\n          proprice<span class=\"token operator\">:</span> <span class=\"token number\">14.2</span><span class=\"token punctuation\">,</span>\n          info<span class=\"token operator\">:</span> <span class=\"token string\">\"炎热的夏天, 来个冰激凌了\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 3. 注册组件</span>\n  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// MyProduct: MyProduct</span>\n    MyProduct\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-组件通信-单项数据流\"><a href=\"#2-组件通信-单项数据流\" class=\"headerlink\" title=\"2,组件通信_单项数据流:\"></a>2,组件通信_单项数据流:</h3><p>在vue中需要遵循单向数据流原则</p>\n<pre><code>1. 父组件的数据发生了改变，子组件会自动跟着变\n2. 子组件不能直接修改父组件传递过来的props  props是只读的\n</code></pre>\n<p><code>父组件传给子组件的是一个对象，子组件修改对象的属性，是不会报错的，对象是引用类型, 互相更新</code></p>\n<p><code>总结: props的值不能重新赋值, 对象引用关系属性值改变, 互相影响</code></p>\n<h3 id=\"3-子向父通信\"><a href=\"#3-子向父通信\" class=\"headerlink\" title=\"3,子向父通信:\"></a>3,子向父通信:</h3><p><code>总结: 父自定义事件和方法, 等待子组件触发事件给方法传值</code></p>\n<p>语法:</p>\n<ul>\n<li>父: @自定义事件名=”父methods函数”</li>\n<li>子: this.$emit(“自定义事件名”, 传值) - 执行父methods里函数代码</li>\n</ul>\n<p>组件:</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"my-product\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">></span>标题<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> title <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>价格<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> price <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>元<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> intro <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"subFn\"</span><span class=\"token operator\">></span>宝刀<span class=\"token operator\">-</span>砍<span class=\"token number\">1</span>元<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> eventBus <span class=\"token keyword\">from</span> <span class=\"token string\">'../EventBus'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'price'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'intro'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">subFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'subprice'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 子向父</span>\n      eventBus<span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 跨组件</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n<span class=\"token punctuation\">.</span>my<span class=\"token operator\">-</span>product <span class=\"token punctuation\">&#123;</span>\n  width<span class=\"token operator\">:</span> <span class=\"token number\">400</span>px<span class=\"token punctuation\">;</span>\n  padding<span class=\"token operator\">:</span> <span class=\"token number\">20</span>px<span class=\"token punctuation\">;</span>\n  border<span class=\"token operator\">:</span> <span class=\"token number\">2</span>px solid #<span class=\"token number\">000</span><span class=\"token punctuation\">;</span>\n  border<span class=\"token operator\">-</span>radius<span class=\"token operator\">:</span> <span class=\"token number\">5</span>px<span class=\"token punctuation\">;</span>\n  margin<span class=\"token operator\">:</span> <span class=\"token number\">10</span>px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>App.vue</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token punctuation\">,</span>mmm<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 目标<span class=\"token operator\">:</span> 子传父 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> <span class=\"token number\">1.</span> 父组件<span class=\"token punctuation\">,</span> @自定义事件名<span class=\"token operator\">=</span><span class=\"token string\">\"父methods函数\"</span> <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>MyProduct v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(obj, ind) in list\"</span> <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"obj.id\"</span>\n    <span class=\"token operator\">:</span>title<span class=\"token operator\">=</span><span class=\"token string\">\"obj.proname\"</span>\n    <span class=\"token operator\">:</span>price<span class=\"token operator\">=</span><span class=\"token string\">\"obj.proprice\"</span>\n    <span class=\"token operator\">:</span>intro<span class=\"token operator\">=</span><span class=\"token string\">\"obj.info\"</span>\n    <span class=\"token operator\">:</span>index<span class=\"token operator\">=</span><span class=\"token string\">\"ind\"</span>\n    @subprice<span class=\"token operator\">=</span><span class=\"token string\">\"fn\"</span>\n    <span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MyProduct<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n\n<span class=\"token keyword\">import</span> MyProduct <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/MyProduct_sub'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n      list<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级好吃的棒棒糖\"</span><span class=\"token punctuation\">,</span>\n          proprice<span class=\"token operator\">:</span> <span class=\"token number\">18.8</span><span class=\"token punctuation\">,</span>\n          info<span class=\"token operator\">:</span> <span class=\"token string\">\"开业大酬宾, 全场8折\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n          proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级好吃的大鸡腿\"</span><span class=\"token punctuation\">,</span>\n          proprice<span class=\"token operator\">:</span> <span class=\"token number\">34.2</span><span class=\"token punctuation\">,</span>\n          info<span class=\"token operator\">:</span> <span class=\"token string\">\"好吃不腻, 快来买啊\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n          proname<span class=\"token operator\">:</span> <span class=\"token string\">\"超级无敌的冰激凌\"</span><span class=\"token punctuation\">,</span>\n          proprice<span class=\"token operator\">:</span> <span class=\"token number\">14.2</span><span class=\"token punctuation\">,</span>\n          info<span class=\"token operator\">:</span> <span class=\"token string\">\"炎热的夏天, 来个冰激凌了\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    MyProduct\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">inde<span class=\"token punctuation\">,</span> price</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 逻辑代码</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span>inde<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>proprice <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span>inde<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>proprice <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">[</span>inde<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>proprice <span class=\"token operator\">-</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-总结\"><a href=\"#3-总结\" class=\"headerlink\" title=\"3-总结:\"></a>3-总结:</h2><h3 id=\"Vue组件如何进行传值的\"><a href=\"#Vue组件如何进行传值的\" class=\"headerlink\" title=\"Vue组件如何进行传值的\"></a>Vue组件如何进行传值的</h3><p>父向子 -&gt; props定义变量 -&gt; 父在使用组件用属性给props变量传值</p>\n<p>子向父 -&gt; $emit触发父的事件 -&gt; 父在使用组件用@自定义事件名=父的方法 (子把值带出来)</p>"}],"PostAsset":[{"_id":"source/_posts/vue基础入门/image-20211114091321486-16368533833712.png","slug":"image-20211114091321486-16368533833712.png","post":"ckw4zukow0001a0tyghstejye","modified":0,"renderable":0},{"_id":"source/_posts/vue基础入门/image-20211114091321486.png","slug":"image-20211114091321486.png","post":"ckw4zukow0001a0tyghstejye","modified":0,"renderable":0},{"_id":"source/_posts/vue基础入门/image-20211114091337628-16368533729791.png","slug":"image-20211114091337628-16368533729791.png","post":"ckw4zukow0001a0tyghstejye","modified":0,"renderable":0},{"_id":"source/_posts/vue基础入门/image-20211114091337628.png","slug":"image-20211114091337628.png","post":"ckw4zukow0001a0tyghstejye","modified":0,"renderable":0},{"_id":"source/_posts/vue基础入门/image-20211114091405800.png","slug":"image-20211114091405800.png","post":"ckw4zukow0001a0tyghstejye","modified":0,"renderable":0},{"_id":"source/_posts/vue基础入门/image-20211114091424285.png","slug":"image-20211114091424285.png","post":"ckw4zukow0001a0tyghstejye","modified":0,"renderable":0},{"_id":"source/_posts/vue基础入门/image-20211114143420078.png","slug":"image-20211114143420078.png","post":"ckw4zukow0001a0tyghstejye","modified":0,"renderable":0},{"_id":"source/_posts/vue基础入门/image-20211114143428305.png","slug":"image-20211114143428305.png","post":"ckw4zukow0001a0tyghstejye","modified":0,"renderable":0},{"_id":"source/_posts/vue基础入门/image-20211114143435985.png","slug":"image-20211114143435985.png","post":"ckw4zukow0001a0tyghstejye","modified":0,"renderable":0},{"_id":"source/_posts/vue基础属性/image-20211115152931976.png","slug":"image-20211115152931976.png","post":"ckw4zukoy0003a0tydiacfj2b","modified":0,"renderable":0},{"_id":"source/_posts/vue基础属性/image-20211115153036413.png","slug":"image-20211115153036413.png","post":"ckw4zukoy0003a0tydiacfj2b","modified":0,"renderable":0},{"_id":"source/_posts/vue基础属性/image-20211115153220820.png","slug":"image-20211115153220820.png","post":"ckw4zukoy0003a0tydiacfj2b","modified":0,"renderable":0},{"_id":"source/_posts/vue生命周期/vue的生命周期.jpg","slug":"vue的生命周期.jpg","post":"ckw4zukp10007a0ty6xdr9klx","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckw4zukp10008a0tyhz0m9910","category_id":"ckw4zukoz0004a0tyg7087m7e","_id":"ckw4zukp3000ba0tybxao2dur"},{"post_id":"ckw4zukow0001a0tyghstejye","category_id":"ckw4zukoz0004a0tyg7087m7e","_id":"ckw4zukp4000ea0ty3dhmf983"},{"post_id":"ckw4zukoy0003a0tydiacfj2b","category_id":"ckw4zukoz0004a0tyg7087m7e","_id":"ckw4zukp4000ga0tyazvnhdq2"},{"post_id":"ckw4zukp10007a0ty6xdr9klx","category_id":"ckw4zukoz0004a0tyg7087m7e","_id":"ckw4zukp5000ja0tyeqw4csa2"}],"PostTag":[{"post_id":"ckw4zukow0001a0tyghstejye","tag_id":"ckw4zukp00005a0tyei9i2zcu","_id":"ckw4zukp4000fa0ty8ybp3z56"},{"post_id":"ckw4zukow0001a0tyghstejye","tag_id":"ckw4zukp2000aa0ty7an5gbte","_id":"ckw4zukp4000ha0tyfykk0fe5"},{"post_id":"ckw4zukoy0003a0tydiacfj2b","tag_id":"ckw4zukp00005a0tyei9i2zcu","_id":"ckw4zukp5000la0ty5oxqaokv"},{"post_id":"ckw4zukoy0003a0tydiacfj2b","tag_id":"ckw4zukp2000aa0ty7an5gbte","_id":"ckw4zukp5000ma0tycv9tcsv6"},{"post_id":"ckw4zukp10007a0ty6xdr9klx","tag_id":"ckw4zukp00005a0tyei9i2zcu","_id":"ckw4zukp5000pa0ty5ezbbtei"},{"post_id":"ckw4zukp10007a0ty6xdr9klx","tag_id":"ckw4zukp2000aa0ty7an5gbte","_id":"ckw4zukp5000qa0tyaazu5npl"},{"post_id":"ckw4zukp10008a0tyhz0m9910","tag_id":"ckw4zukp00005a0tyei9i2zcu","_id":"ckw4zukp5000ra0tyg1xr8qvs"},{"post_id":"ckw4zukp10008a0tyhz0m9910","tag_id":"ckw4zukp2000aa0ty7an5gbte","_id":"ckw4zukp5000sa0ty7hio8n7k"}],"Tag":[{"name":"前端","_id":"ckw4zukp00005a0tyei9i2zcu"},{"name":"vue","_id":"ckw4zukp2000aa0ty7an5gbte"}]}}